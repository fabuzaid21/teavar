{"version":3,"sources":["Header.jsx","TEInputs.jsx","StockInputs.jsx","TEOutputs.jsx","Login.jsx","StockOutputs.jsx","ForceGraph.jsx","App.js","serviceWorker.js","index.js"],"names":["StyledHeader","styled","div","_templateObject","Header","_this","this","modes","props","map","mode","num","react_default","a","createElement","key","className","onClick","e","setMode","id","Component","StyledInputs","TEInputs_templateObject","TEInputs","name","onChange","handleTEInput","target","value","default","type","placeholder","handleTESubmit","StockInputs_templateObject","StockInputs","matches","tickerInputs","tickers","ticker","concat","handleTickerValue","tickerMatches","StockInputs_StyledInputs","handleAddTicker","handleStockInput","handleTickerSubmit","TEOutputs_templateObject","Table","table","_templateObject2","StyledLogin","Login_templateObject","Login_templateObject2","Login","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","password","v","setState","_this2","Login_StyledInputs","handlePassword","login","StyledOutputs","StockOutputs_templateObject","SVG","svg","StockOutputs_templateObject2","AllocationTable","_templateObject3","InfoTable","_templateObject4","StockOutputs","console","log","beta","data","optimal_b","roi","budget","cvar","optimal_cvar","var","optimal_var","optimal_a","selected","allocation","gain","drawGraph","bind","assertThisInitialized","selectLine","highlightCircles","d","_this3","d3","style","attr","circle","filter","c","i","beta_vals","g_vals","gains","b","values","g","j","line_id","point_id","length","push","xScale","domain","range","width","scalesY","yScale","height","color","append","line","x","y","lines","selectAll","enter","on","text","formatter","xAxis","ticks","tickFormat","yAxis","allocation_info","point_info","_this4","statement_header","statement_weights","forEach","w","Math","round","ref","StyledResults","ForceGraph_templateObject","ForceGraph_templateObject2","PathTable","ForceGraph_templateObject3","OuterTable","ForceGraph_templateObject4","ForceGraph","simulation","numSelected","firstSelected","secondSelected","nodeSize","edgeLength","flows","showPaths","showUtilization","edgesByTunnel","nodesByTunnel","tunnelIndex","scenario","downLinks","dashLinks","colorNodes","scenarios","flowid","backFlowid","tips","graph","num_nodes","click","arrowPress","dragstarted","dragged","dragended","changeTunnel","topology","clearGraph","f","T","Tf","links","demand","probabilities","X","nodes","tunnels","getTunnels","src","toString","dst","satisfiedDemand","totalDemand","reduce","s","sentTraffic","Array","fill","satisfied","flow","total_weight","numAvailable","tunnel","t","weight","congested","link","ls","l","index","capacity","scenarioSatisfaction","updateGraph","active","alphaTarget","restart","fx","fy","getBackLink","linkIndices","colorLinks","includes","dash","forwardLinks","source","backLinks","node1","node2","ret","allTunnels","availability","prob","edges_used","edge","sent","backindex","line1","line2","tip","select","parentNode","rect","bbox","node","getBBox","_this5","remove","each","addTip","resetColors","_this6","keyCode","preventDefault","handleScenario","opacity","_this7","linkTraffic","_loop","_loop2","linklabel","html","getTunnelNodes","backFlow","_this8","demandedFrom","demandedTo","_this9","_this$getNodeDemand","getNodeDemand","_this$getNodeDemand2","slicedToArray","getFlow","_this10","document","addEventListener","force","distance","strength","getBoundingClientRect","then","error","objectSpread","xpos","angle","atan2","cos","ypos","sin","transition","duration","prob_failure","pageX","pageY","path_info","_this11","utilizationButton","sentDemand","thead","demandRows","sentRows","satisfiedRows","_loop3","demandRow","sentRow","satisfiedRow","_loop4","parseInt","padding-left","ForceGraph_SVG","pointerEvents","padding","TESection","App_templateObject","StyledError","App_templateObject2","App","te","inputs","path","cutoff","k","downscale_demand","zeroindex","demand_matrix","results","show_results","stocks","days","KEYS","removeError","defineProperty","newtickers","returns","ticker_ordered","Promise","all","resolve","reject","fetch","method","res","json","daily_returns","daily_data","keys","last","curr","catch","nstocks","body","JSON","stringify","parseFloat","headers","Content-Type","response","oldkey","newkey","message","split","home","header","src_Header","src_TEInputs","src_ForceGraph","src_StockInputs","src_StockOutputs","src_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee7bd347.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled.div`\n    position: fixed;\n    height: 67px;\n    width: 100vw;\n    top: 0;\n    border-bottom: 1px solid #222;\n    box-shadow: 0 1px 0 #262626;\n    background-color: #191919;\n    background-image: -webkit-gradient(linear,left top,left bottom,from(#282828),to(#191919));\n    background-image: -webkit-linear-gradient(top,#282828,#191919);\n    background-image: linear-gradient(top,#282828,#191919);\n    background-repeat: no-repeat;\n    z-index: 10;\n\n    #left {\n        position: absolute;\n        height: 100%;\n        left: 10px;\n    }\n\n    #center {\n        position: absolute;\n        height: 100%;\n        left: 50%;\n        transform: translateX(-50%);\n        color: white;\n\n        #title {\n            font-size: 25px;\n            padding-top: 15px;\n        }\n    }\n\n    #right {\n        position: absolute;\n        height: 100%;\n        padding-top: 20px;\n        padding-right: 20px;\n        right: 10px;\n        color: white;\n\n        .link {\n            cursor: pointer;\n            &:hover {\n                border-bottom: 1px solid white;\n            }\n        }\n    }\n`;\n\n\nclass Header extends Component {\n  render() {\n    let modes = this.props.modes.map((mode, num) => {\n        return this.props.mode === mode ? \"\" :\n            <div key={num} className=\"link\" onClick={e => this.props.setMode(mode)}>{mode}</div>\n    })\n    return (\n      <div>\n        <StyledHeader>\n            <div id=\"left\">\n            </div>\n            <div id=\"center\">\n                <div id=\"title\">\n                    TEAVAR Demo\n                </div>\n            </div>\n            <div id=\"right\">\n                {modes}\n            </div>\n        </StyledHeader>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst StyledInputs = styled.div`\n    form {\n        margin: 10px;\n        select {\n         -webkit-appearance: button;\n         -webkit-border-radius: 2px;\n         -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n         -webkit-padding-end: 20px;\n         -webkit-padding-start: 2px;\n         -webkit-user-select: none;\n         background-image: url(http://i62.tinypic.com/15xvbd5.png), -webkit-linear-gradient(#FAFAFA, #F4F4F4 40%, #E5E5E5);\n         background-position: 97% center;\n         background-repeat: no-repeat;\n         border: 1px solid #AAA;\n         color: #555;\n         font-size: inherit;\n         overflow: hidden;\n         padding: 5px 10px;\n         text-overflow: ellipsis;\n         white-space: nowrap;\n         width: 300px;\n        }\n    }\n    .input {\n      text-align: center;\n      width: 100%;\n      display: block;\n      height: 50px;\n\n      select {\n        border: none;\n      }\n\n      input, form {\n        font-size: 15px;\n        margin-left: 0;\n        margin-right: 0;\n        display: inline-block;\n        border-left: none;\n        border-right: 1px solid #AAA;\n        border-top: 1px solid #AAA;\n        border-bottom: 1px solid #AAA;\n        border-top-left-radius: 0px;\n        border-bottom-left-radius: 0px;\n      }\n    }\n\n    .input_label {\n      color: white;\n      display: inline-block;\n      width: 75px;\n      height: calc(100% - 34px);\n      background-color: #999;\n      vertical-align: top;\n      margin: 10px 0px;\n      padding: 6px 10px;\n      border-left: 1px solid #AAA;\n      border-top: 1px solid #AAA;\n      border-bottom: 1px solid #AAA;\n      font-size: 14px;\n    }\n\n    input {\n      position: relative;\n      display: block;\n      margin: 10px auto;\n      -webkit-appearance: button;\n      -webkit-border-radius: 2px;\n      -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n      -webkit-padding-end: 20px;\n      -webkit-padding-start: 2px;\n      -webkit-user-select: none;\n      border: 1px solid #AAA;\n      color: #555;\n      font-size: inherit;\n      overflow: hidden;\n      padding: 5px 10px;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      width: 278px;\n    }\n    button {\n      margin: 10px;\n    }\n`;\n\nclass TEInputs extends Component {\n    render() {\n        return (\n          <div>\n            <StyledInputs>\n              <div className=\"input\">\n                  <div className=\"input_label\">Topology</div>\n                  <form>\n                  <select name=\"dropdown\" onChange={e => this.props.handleTEInput(e.target.value, \"topology\")}>\n                      <option value=\"Custom\" default>Small Net</option>\n                      <option value=\"B4\">B4</option>\n                      <option value=\"IBM\">IBM</option>\n                      <option value=\"Abilene\">Abilene</option>\n                  </select>\n                  </form>\n                </div>              \n              <div className=\"input\">\n                  <div className=\"input_label\">Demand</div>\n                  <form>\n                  <select name=\"dropdown\" onChange={e => this.props.handleTEInput(e.target.value, \"demand\")}>\n                      <option value=\"1\" default>1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                  </select>\n                </form>\n              </div>\n              <div className=\"input\">\n                  <div className=\"input_label\">Paths</div>\n                  <form>\n                  <select name=\"dropdown\" onChange={e => this.props.handleTEInput(e.target.value, \"path\")}>\n                      <option value=\"SMORE\" default>Oblivious</option>\n                      <option value=\"ED\" default>ED</option>\n                      <option value=\"ksp_2\">KSP_2</option>\n                      <option value=\"ksp_4\">KSP_4</option>\n                      <option value=\"ksp_6\">KSP_6</option>\n                  </select>\n                </form>\n              </div>\n              <div className=\"input\">\n                <div className=\"input_label\">Beta (%)</div>\n                <input\n                  type=\"text\"\n                  placeholder=\"0.9\"\n                  onChange={e => this.props.handleTEInput(e.target.value, \"beta\")}\n                />\n              </div>\n              <div className=\"input\">\n                <div className=\"input_label\">Cutoff (%)</div>\n                <input\n                  type=\"text\"\n                  placeholder=\"0.0001\"\n                  onChange={e => this.props.handleTEInput(e.target.value, \"cutoff\")}\n                />\n              </div>\n              <button onClick={e => this.props.handleTESubmit()}>\n                Submit\n              </button>\n            </StyledInputs>\n          </div>\n        );\n    }\n}\n\nexport default TEInputs;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst StyledInputs = styled.div`\n    margin 40px auto;\n    text-align: center;\n\n    form {\n        margin: 10px;\n        select {\n         -webkit-appearance: button;\n         -webkit-border-radius: 2px;\n         -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n         -webkit-padding-end: 20px;\n         -webkit-padding-start: 2px;\n         -webkit-user-select: none;\n         background-image: url(http://i62.tinypic.com/15xvbd5.png), -webkit-linear-gradient(#FAFAFA, #F4F4F4 40%, #E5E5E5);\n         background-position: 97% center;\n         background-repeat: no-repeat;\n         border: 1px solid #AAA;\n         color: #555;\n         font-size: inherit;\n         overflow: hidden;\n         padding: 5px 10px;\n         text-overflow: ellipsis;\n         white-space: nowrap;\n         width: 300px;\n        }\n    }\n\n\n    .input {\n      text-align: center;\n      width: 100%;\n      display: block;\n      height: 50px;\n\n      input {\n        display: inline-block;\n        border-left: none;\n        border-right: 1px solid #AAA;\n        border-top: 1px solid #AAA;\n        border-bottom: 1px solid #AAA;\n        border-top-left-radius: 0px;\n        border-bottom-left-radius: 0px;\n      }\n    }\n\n    .input_label {\n      color: white;\n      display: inline-block;\n      width: 75px;\n      height: calc(100% - 34px);\n      background-color: #999;\n      vertical-align: top;\n      margin: 10px 0px;\n      padding: 6px 10px;\n      border-left: 1px solid #AAA;\n      border-top: 1px solid #AAA;\n      border-bottom: 1px solid #AAA;\n      font-size: 14px;\n    }\n\n    input {\n      position: relative;\n      display: block;\n      margin: 10px auto;\n      -webkit-appearance: button;\n      -webkit-border-radius: 2px;\n      -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n      -webkit-padding-end: 20px;\n      -webkit-padding-start: 2px;\n      -webkit-user-select: none;\n      border: 1px solid #AAA;\n      color: #555;\n      font-size: inherit;\n      overflow: hidden;\n      padding: 5px 10px;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      width: 278px;\n    }\n    .matches {\n      position: relative;\n      top: 10px;\n    }\n    button {\n      margin: 10px;\n    }\n`;\n\nclass StockInputs extends Component {\n\n    render() {\n        const tickerInputs =\n            this.props.tickers.map((ticker, num) => {\n                return (\n                    <input\n                      key={num}\n                      type=\"text\"\n                      placeholder={`Ticker ${num}`}\n                      value={ticker}\n                      onChange={e => this.props.handleTickerValue(e.target.value, num)}\n                    />\n\n                );\n            });\n\n        let matches\n        if (this.props.tickerMatches) {\n          matches = this.props.tickerMatches.map(ticker => (<div>{ticker[\"1. symbol\"]}</div>))\n        }\n\n        return (\n          <div>\n            <StyledInputs>\n              <div className=\"tickers_label\">Portfolio Tickers</div>\n\n                {tickerInputs}\n              <div>\n                {matches}\n              </div>\n              <button onClick={e => this.props.handleAddTicker()}>\n                Add\n              </button>\n              <div className=\"input\">\n                <div className=\"input_label\">Budget ($)</div>\n                <input\n                  type=\"text\"\n                  placeholder=\"1000\"\n                  onChange={e => this.props.handleStockInput(e.target.value, \"budget\")}\n                />\n              </div>\n              <div className=\"input\">\n                <div className=\"input_label\">Return ($)</div>\n                <input\n                  type=\"text\"\n                  placeholder=\"50\"\n                  onChange={e => this.props.handleStockInput(e.target.value, \"roi\")}\n                />\n              </div>\n              <div className=\"input\">\n                <div className=\"input_label\">Loss ($)</div>\n                <input\n                  type=\"text\"\n                  placeholder=\"40\"\n                  onChange={e => this.props.handleStockInput(e.target.value, \"target\")}\n                />\n              </div>\n              {/*<input\n                type=\"text\"\n                placeholder=\"1000\"\n                onChange={e => this.props.handleStockInput(e.target.value, \"days\")}\n              />*/}\n              <button onClick={e => this.props.handleTickerSubmit()}>\n                Submit\n              </button>\n            </StyledInputs>\n          </div>\n        );\n    }\n}\n\n\nexport default StockInputs;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Allocation = styled.div`\n  color: white;\n`;\n\nconst Table = styled.table`\n  color: white;\n  background-color: #444;\n  border-radius: 10px;\n  margin: 30px auto;\n  tr {\n    border: 1px solid gray;\n    td {\n      padding: 10px;\n    }\n  }\n  .border-bottom {\n    border-bottom: 1px solid white;\n    padding: 6px 0px;\n  }\n  .border-right {\n    border-right: 1px solid white;\n    padding: 0px 6px;\n  }\n`;\n\n\nclass TEOutputs extends Component {\n\n    constructor(props) {\n        super(props);\n        // let flows = new Array(6);\n        // let demand = new Array(6);\n        // let satisfied = new Array(6);\n        // for (let i = 0; i < flows.length; i++) {\n        //   demand[i] = new Array(6);\n        //   flows[i] = new Array(6);\n        //   satisfied[i] = new Array(6);\n        //   for (let j = 0; j < 6; j++) {\n        //     flows[i][j] = \"-\";\n        //     demand[i][j] = \"-\";\n        //     satisfied[i][j] = \"-\";\n        //   }\n        // }\n\n\n        // this.state = {\n        //   flows: flows,\n        //   demand: demand,\n        //   satisfied: satisfied,\n        // }\n      let flows = new Array(Number(props.num_nodes));\n      let demand = new Array(Number(props.num_nodes));\n      let satisfied = new Array(Number(props.num_nodes));\n      for (let i = 0; i < flows.length; i++) {\n        flows[i] = new Array(Number(props.num_nodes));\n        demand[i] = new Array(Number(props.num_nodes));\n        satisfied[i] = new Array(Number(props.num_nodes));\n        for (let j = 0; j < props.num_nodes; j++) {\n          flows[i][j] = \"-\";\n          demand[i][j] = \"-\";\n          satisfied[i][j] = \"-\";\n        }\n      }\n      let offset = props.zeroindex ? 1 : 0;\n      for (let i = 0; i < props.data.flows.length; i++) {\n        let a = props.data.allocation[i].reduce((partial_sum, s) => partial_sum + s);\n        flows[props.data.flows[i][0]-offset][props.data.flows[i][1]-offset] = Math.round(a * 100) / 100;\n        demand[props.data.flows[i][0]-offset][props.data.flows[i][1]-offset] = Math.round(props.data.demand[i] * 100) / 100;\n        satisfied[props.data.flows[i][0]-offset][props.data.flows[i][1]-offset] = Math.round(a /props.data.demand[i] * 100) + \"%\";\n      };\n      this.state = {\n        ...this.state,\n        flows: flows,\n        demand: demand,\n        satisfied: satisfied,\n      }\n    }\n\n    componentWillReceiveProps(props) {\n      console.log(props)\n      let flows = new Array(Number(props.num_nodes));\n      let demand = new Array(Number(props.num_nodes));\n      let satisfied = new Array(Number(props.num_nodes));\n      for (let i = 0; i < flows.length; i++) {\n        flows[i] = new Array(Number(props.num_nodes));\n        demand[i] = new Array(Number(props.num_nodes));\n        satisfied[i] = new Array(Number(props.num_nodes));\n        for (let j = 0; j < props.num_nodes; j++) {\n          flows[i][j] = \"-\";\n          demand[i][j] = \"-\";\n          satisfied[i][j] = \"-\";\n        }\n      }\n      let offset = props.zeroindex ? 1 : 0;\n      for (let i = 0; i < props.data.flows.length; i++) {\n        let a = props.data.allocation[i].reduce((partial_sum, s) => partial_sum + s);\n        flows[props.data.flows[i][0]-offset][props.data.flows[i][1]-offset] = Math.round(a * 100) / 100;\n        demand[props.data.flows[i][0]-offset][props.data.flows[i][1]-offset] = Math.round(props.data.demand[i] * 100) / 100;\n        satisfied[props.data.flows[i][0]-offset][props.data.flows[i][1]-offset] = Math.round(a /props.data.demand[i] * 100) + \"%\";\n      };\n      this.setState({\n        ...this.state,\n        flows: flows,\n        demand: demand,\n        satisfied: satisfied,\n      })\n    }\n\n    render() {\n        let key = 0;\n        let flows = []\n        let thead = []\n        if (this.state.flows[0]) {\n          for (let i = 0; i < this.state.flows[0].length; i++) {\n            thead.push(<th className=\"border-bottom\" key={key++}>{i}</th>)\n          }\n        }\n        flows.push(<tr key={key++}><th></th>{thead}</tr>)\n\n        for (let i = 0; i < this.state.flows.length; i++) {\n          let row = this.state.flows[i]\n          let rowDOM = []\n          for (let j = 0; j < row.length; j++) {\n            rowDOM.push(<td key={key++}>{row[j]}</td>);\n          }\n          flows.push(<tr key={key++}><th className=\"border-right\">{i}</th>{rowDOM}</tr>);\n        }\n\n\n        let demand = []\n        thead = []\n        if (this.state.demand[0]) {\n          for (let i = 0; i < this.state.demand[0].length; i++) {\n            thead.push(<th className=\"border-bottom\" key={key++}>{i}</th>)\n          }\n        }\n        demand.push(<tr key={key++}><th></th>{thead}</tr>)\n\n        for (let i = 0; i < this.state.demand.length; i++) {\n          let row = this.state.demand[i]\n          let rowDOM = []\n          for (let j = 0; j < row.length; j++) {\n            rowDOM.push(<td key={key++}>{row[j]}</td>);\n          }\n          demand.push(<tr key={key++}><th className=\"border-right\">{i}</th>{rowDOM}</tr>);\n        }\n\n        let satisfied = []\n        thead = []\n        if (this.state.satisfied[0]) {\n          for (let i = 0; i < this.state.satisfied[0].length; i++) {\n            thead.push(<th className=\"border-bottom\" key={key++}>{i}</th>)\n          }\n        }\n        satisfied.push(<tr key={key++}><th></th>{thead}</tr>)\n\n        for (let i = 0; i < this.state.satisfied.length; i++) {\n          let row = this.state.satisfied[i]\n          let rowDOM = []\n          for (let j = 0; j < row.length; j++) {\n            rowDOM.push(<td key={key++}>{row[j]}</td>);\n          }\n          satisfied.push(<tr key={key++}><th className=\"border-right\">{i}</th>{rowDOM}</tr>);\n        }\n        return (\n          <div>\n            <Table>\n              <tbody>\n                {flows}\n              </tbody>\n            </Table>\n            <Table>\n              <tbody>\n                {demand}\n              </tbody>\n            </Table>\n            <Table>\n              <tbody>\n                {satisfied}\n              </tbody>\n            </Table>\n          </div>\n        );\n    }\n}\n\nexport default TEOutputs;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst StyledLogin = styled.div`\n    margin-top: 30vh;\n`;\n\nconst StyledInputs = styled.div`\n    form {\n        margin: 10px;\n        select {\n         -webkit-appearance: button;\n         -webkit-border-radius: 2px;\n         -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n         -webkit-padding-end: 20px;\n         -webkit-padding-start: 2px;\n         -webkit-user-select: none;\n         background-image: url(http://i62.tinypic.com/15xvbd5.png), -webkit-linear-gradient(#FAFAFA, #F4F4F4 40%, #E5E5E5);\n         background-position: 97% center;\n         background-repeat: no-repeat;\n         border: 1px solid #AAA;\n         color: #555;\n         font-size: inherit;\n         overflow: hidden;\n         padding: 5px 10px;\n         text-overflow: ellipsis;\n         white-space: nowrap;\n         width: 300px;\n        }\n    }\n    .input {\n      text-align: center;\n      width: 100%;\n      display: block;\n      height: 50px;\n\n      select {\n        border: none;\n      }\n\n      .input-elt {\n        font-size: 15px;\n        margin-left: 0;\n        margin-right: 0;\n        display: inline-block;\n        border-left: none;\n        border-right: 1px solid #AAA;\n        border-top: 1px solid #AAA;\n        border-bottom: 1px solid #AAA;\n        border-top-left-radius: 0px;\n        border-bottom-left-radius: 0px;\n      }\n    }\n\n    .input_label {\n      color: white;\n      display: inline-block;\n      width: 75px;\n      height: calc(100% - 34px);\n      background-color: #999;\n      vertical-align: top;\n      margin: 10px 0px;\n      padding: 6px 10px;\n      border-left: 1px solid #AAA;\n      border-top: 1px solid #AAA;\n      border-bottom: 1px solid #AAA;\n      font-size: 14px;\n    }\n\n    .input-elt {\n      position: relative;\n      display: block;\n      margin: 10px auto;\n      -webkit-appearance: button;\n      -webkit-border-radius: 2px;\n      -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n      -webkit-padding-end: 20px;\n      -webkit-padding-start: 2px;\n      -webkit-user-select: none;\n      border: 1px solid #AAA;\n      color: #555;\n      font-size: inherit;\n      overflow: hidden;\n      padding: 5px 10px;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      width: 278px;\n    }\n    .button {\n        color: white;\n        display: block;\n        width: 75px;\n        background-color: #999;\n        vertical-align: top;\n        margin: 10px auto;\n        padding: 6px 10px;\n        border-left: 1px solid #AAA;\n        border-top: 1px solid #AAA;\n        border-bottom: 1px solid #AAA;\n        font-size: 14px;\n        border-radius: 5px;\n    }\n`;\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: \"\",\n        }\n    }\n\n    handlePassword(v) {\n        this.setState({\n            password: v,\n        })\n    }\n    render() {\n        return (\n          <StyledLogin>\n            <StyledInputs id=\"login-window\">\n              <form className=\"input\">\n                {/* <div className=\"input_label\">Password</div> */}\n                <input\n                  className=\"input-elt\"\n                  type=\"password\"\n                  placeholder=\"\"\n                  onChange={e => this.handlePassword(e.target.value)}\n                />\n                <input\n                    className=\"button\"\n                    type=\"submit\"\n                    onClick={e => this.props.login(this.state.password)}\n                    value=\"Login\"\n                />\n              </form>\n\n            </StyledInputs>\n          </StyledLogin>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from \"d3\";\n\nconst StyledOutputs = styled.div`\n    position: relative;\n    svg {\n        font-family: Sans-Serif, Arial;\n    }\n    .line {\n      stroke-width: 4;\n      fill: none;\n    }\n\n    .axis path {\n      stroke: black;\n    }\n\n    .text {\n      font-size: 12px;\n    }\n\n    .title-text {\n      font-size: 12px;\n    }\n\n    #all-statements {\n      display: block;\n      width: 100%;\n      border-bottom: 1px solid black;\n    }\n\n    #statement-table {\n      background-color: #EEE;\n      margin-top: 10px;\n    }\n\n    #statements {\n      width: 40%;\n      margin: 0px auto;\n      margin-bottom: 70px;\n      background-color: #EEE;\n      padding: 20px;\n      border-radius: 5px;\n      font-size: 18px;\n      text-align:center;\n\n      div {\n        margin: 20px 0px;\n      }\n      .colorGreen {\n        color: rgb(0,150,0);\n      }\n      .colorRed {\n        color: rgb(150, 0,0);\n      }\n    }\n`;\n\nconst SVG = styled.svg`\n  display: block;\n  margin: -60px auto 0px auto;\n  height: 700px;\n  width: 900px;\n`;\n\nconst AllocationTable = styled.table`\n    border: 1px solid gray;\n    background-color: rgba(255, 255, 255, .2);\n    margin: 0px auto;\n    th {\n        padding: 3px 10px;\n    }\n\n    td {\n        padding: 5px 10px;\n        text-align: center;\n    }\n\n    .selected {\n        background-color: rgba(200, 200, 200, .6);\n    }\n`;\n\nconst InfoTable = styled.table`\n    border: 1px solid gray;\n    background-color: rgba(255, 255, 255, .2);\n    margin: 10px auto;\n    margin-top: 70px;\n\n    th {\n        padding: 3px 10px;\n    }\n\n    td {\n        padding: 5px 10px;\n        text-align: center;\n    }\n\n    .selected {\n        background-color: rgba(200, 200, 200, .6);\n    }\n`;\n\nclass StockOutputs extends Component {\n    constructor(props){\n        super(props)\n        console.log(props)\n        this.state = {\n            beta: props.data.optimal_b,\n            roi: props.roi/props.budget,\n            cvar: props.data.optimal_cvar,\n            var: props.data.optimal_var,\n            a: props.data.optimal_a,\n            budget: props.budget,\n            selected: {\n              allocation: props.data.optimal_a,\n              var: props.data.optimal_var,\n              cvar: props.data.optimal_cvar,\n              gain: props.roi/props.budget,\n              name: \"test_\" + props.data.optimal_b,\n              id: -1,\n            }\n        }\n        this.drawGraph = this.drawGraph.bind(this);\n        this.selectLine = this.selectLine.bind(this);\n        this.highlightCircles = this.highlightCircles.bind(this);\n    }\n\n    componentDidMount() {\n        this.drawGraph(this.props.data)\n    }\n\n    componentWillReceiveProps(props) {\n        console.log(props);\n        this.setState({\n          // allocation: props.data.optimal_a,\n          // var: props.data.optimal_var,\n          // cvar: props.data.optimal_cvar,\n          beta: props.data.optimal_b,\n          roi: props.roi/props.budget,\n          cvar:  props.data.optimal_cvar,\n          var: props.data.optimal_var,\n          budget: props.budget,\n          a: props.data.optimal_a,\n          selected: {\n            allocation: props.data.optimal_a,\n            var: props.data.optimal_var,\n            cvar: props.data.optimal_cvar,\n            gain: props.roi/props.budget,\n            name: \"test_\" + props.data.optimal_b,\n          }\n        })\n        this.drawGraph(props.data);\n    }\n\n    selectLine(d) {\n        console.log(d)\n        this.setState({\n            selected: d,\n        }, () => {\n          this.highlightCircles();\n        })\n    }\n\n    highlightCircles() {\n        d3.selectAll(\"circle\").style(\"opacity\", .5)\n        d3.selectAll(\"circle\").attr(\"r\", 6)\n        if (this.state.selected) {\n          let circle = d3.selectAll(\"circle\").filter((c, i) => (c.id === this.state.selected.id));\n          circle.style(\"opacity\", 1);\n          circle.attr(\"r\", 8)\n        }\n\n    }\n\n    drawGraph(d) {\n    console.log(d)\n    var beta_vals = d.beta\n    var g_vals = d.gains\n    var id = 0;\n    var data = beta_vals.map((b,i) => {\n      var values = g_vals.map((g,j) => {\n        return {\n          gain: g,\n          cvar: d.cvar[i][j],\n          var: d.var[i][j],\n          allocation: d.allocation[i][j],\n          name: \"test_\" + b,\n          line_id: i,\n          point_id: j,\n          id: id++,\n        }\n      });\n      return {\n        name: \"Beta=\" + b,\n        values: values,\n        beta: b,\n        id: i,\n      }\n    });\n    var line_id = data.length\n    data.push({\n      name: \"Beta=\" + d.optimal_b,\n      beta: d.optimal_b,\n      id: id++,\n      values: [{\n          gain: this.props.roi/this.props.budget,\n          cvar: d.optimal_cvar,\n          var: d.optimal_var,\n          allocation: d.optimal_a,\n          name: \"test_\" + d.optimal_b,\n          line_id: line_id + 1,\n          point_id: -1,\n          id: -1,\n      }],\n    })\n\n    console.log(data)\n    var width = 800;\n    var height = 600;\n    var margin = 100;\n    var duration = 100;\n\n    var lineOpacity = \"0.25\";\n    var lineOpacityHover = \"0.6\";\n    var otherLinesOpacityHover = \"0.1\";\n    var lineStroke = \"4px\";\n    var lineStrokeHover = \"4px\";\n\n    var circleOpacity = '0.85';\n    var circleOpacityOnLineHover = \"0.25\"\n    var circleRadius = 6;\n    var circleRadiusHover = 8;\n\n    /* Scale */\n    var xScale = d3.scaleLinear ()\n      .domain(d3.extent(data[0].values, d => d.gain))\n      .range([0, width-margin]);\n\n    var scalesY = d.cvar\n    scalesY.push([d.optimal_cvar])\n    var yScale = d3.scaleLinear()\n      .domain([d3.min(scalesY.map(cvar => d3.min(cvar, d => d)), d => d), d3.max(scalesY.map(cvar => d3.max(cvar, d => d)), d => d)])\n      .range([height-margin, 0]);\n\n    var color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    /* Add SVG */\n    var svg = d3.select(this.svg)\n      .append('g')\n      .attr(\"height\", (height + margin) + \"px\")\n      .attr(\"width\", (width + margin) + \"px\")\n      .attr(\"transform\", `translate(${margin}, ${margin})`);\n\n    svg.append(\"text\")\n      .attr(\"class\", \"title-text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"x\", (width-margin)/2)\n      .attr(\"y\", 5);\n\n    /* Add line into SVG */\n    var line = d3.line()\n      .x(d => xScale(d.gain))\n      .y(d => yScale(d.cvar));\n\n    let lines = svg.append('g')\n      .attr('class', 'lines');\n\n\n    let highlightCircles = this.highlightCircles;\n    lines.selectAll('.line-group')\n      .data(data).enter()\n      .append('g')\n      .attr('class', 'line-group')\n      .append('path')\n      .attr('class', 'line')\n      .attr('d', d => line(d.values))\n      .style('stroke', (d, i) => color(i))\n      .style('opacity', lineOpacity)\n      .on(\"mouseover\", function(d, i) {\n          d3.selectAll('.line')\n            .style('opacity', otherLinesOpacityHover);\n          d3.selectAll(\"circle\").filter((c, i) => (c.line_id === d.id))\n            .attr('opacity', 1);\n          d3.select(this)\n            .style('opacity', lineOpacityHover)\n            .style(\"stroke-width\", lineStrokeHover)\n            .style(\"cursor\", \"pointer\");\n        })\n      .on(\"mouseout\", function(d) {\n          highlightCircles();\n          d3.select(this)\n            .style('opacity', lineOpacity)\n            .style(\"stroke-width\", lineStroke)\n            .style(\"cursor\", \"pointer\");\n        });\n\n\n    /* Add circles in the line */\n    lines.selectAll(\"circle-group\")\n      .data(data).enter()\n      .append(\"g\")\n      .attr(\"id\", (d,i) => `circle-group-${i}`)\n      .attr(\"class\", \"circle-group\")\n      .style(\"fill\", (d, i) => color(i))\n      .selectAll(\"circle\")\n      .data(d => d.values).enter()\n      .append(\"g\")\n      .attr(\"class\", \"circle\")\n      .attr(\"id\", (d,i) => `circle-${i}`)\n      .on(\"click\", this.selectLine)\n      // .on(\"mouseover\", function(d) {\n      //     d3.select(this)\n      //       .style(\"cursor\", \"pointer\")\n      //       .append(\"text\")\n      //       .attr(\"class\", \"text\")\n      //       .text(`${d.cvar}`)\n      //       .attr(\"x\", d => xScale(d.gain) + 5)\n      //       .attr(\"y\", d => yScale(d.cvar) - 10);\n      //   })\n      // .on(\"mouseout\", function(d) {\n      //     d3.select(this)\n      //       .style(\"cursor\", \"none\")\n      //       .transition()\n      //       .duration(duration)\n      //       .selectAll(\".text\").remove();\n      //   })\n      .append(\"circle\")\n      .attr(\"cx\", d => xScale(d.gain))\n      .attr(\"cy\", d => yScale(d.cvar))\n      .attr(\"r\", circleRadius)\n      .style('opacity', circleOpacity)\n      .on(\"mouseover\", function(d, i) {\n          d3.selectAll(\"circle\").filter((c, i) => (c.id === d.id))\n            .attr(\"r\", circleRadiusHover);\n        })\n      .on(\"mouseout\", function(d) {\n          d3.selectAll(\"circle\").filter((c, i) => (c.id === d.id))\n            .attr(\"r\", circleRadius);\n          highlightCircles();\n      })\n\n    d3.selectAll(\".circle-group\")\n      .append(\"text\")\n      .attr(\"class\", \"text\")\n      .text(d => d.name)\n      .attr(\"x\", d => xScale(d.values[0].gain) + 20)\n      .attr(\"y\", d => yScale(d.values[0].cvar))\n\n    /* Add Axis into SVG */\n    var formatter = d3.format(\".3p\");\n    var xAxis = d3.axisBottom(xScale).ticks(5).tickFormat(formatter);\n    var yAxis = d3.axisLeft(yScale).ticks(5).tickFormat(formatter);\n\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", `translate(0, ${height-margin})`)\n      .call(xAxis)\n      .append('text')\n        .attr(\"x\", (width-margin)/2)\n        .attr(\"y\", \"45\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"fill\", \"#000\")\n        .attr(\"font-size\", \"18px\")\n        .text(\"Return on Investment (%)\");\n\n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"dy\", \"1em\")\n      .call(yAxis)\n      .append('text')\n      .attr(\"y\", -50)\n      .attr(\"x\", -(height - margin)/2)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"fill\", \"#000\")\n      .attr(\"font-size\", \"18px\")\n      .text(\"Conditional Value at Risk (%)\");\n\n    this.highlightCircles();\n  }\n    render() {\n        let allocation_info;\n        let point_info;\n        let statement_header = []\n        let statement_weights = []\n        this.state.a.forEach((w,i) => {\n            statement_header.push(<th x=\"0\">{this.props.tickers[i]}</th>)\n            statement_weights.push(<td x=\"0\">${Math.round(w * 100 * this.state.budget)/100}</td>)\n        })\n\n        if (this.state.selected) {\n            point_info = (<tr>\n                            <td x=\"0\">{Math.round(this.state.selected.var * 100000)/1000}%</td>\n                            <td x=\"50\">{Math.round(this.state.selected.cvar * 100000)/1000}%</td>\n                            <td x=\"50\">{Math.round(this.state.selected.gain * 100000)/1000}%</td>\n                        </tr>)\n            allocation_info = this.state.selected.allocation.map((w, i) => {\n                return <tr key={i}>\n                            <td x=\"0\">{this.props.tickers[i]}</td>\n                            <td x=\"50\">{Math.round(w * 100000)/1000}%</td>\n                        </tr>\n            })\n        }\n\n        console.log(this.state)\n        return (\n          <StyledOutputs>\n            <div id=\"all-statements\">\n              <InfoTable id=\"statement-table\">\n                <tbody>\n                  <tr>\n                    {statement_header}\n                  </tr>\n                  <tr>\n                    {statement_weights}\n                  </tr>\n                </tbody>\n              </InfoTable>\n              <div id=\"statements\">\n                <div>Your gain is\n                  <span className=\"colorGreen\"> {Math.round(this.state.roi * 100 * this.state.budget)/100}$ </span>\n                  return on invesment\n                </div>\n                <div>Your loss is no less than\n                  <span className=\"colorRed\"> {Math.round(this.state.var * 100 * this.state.budget)/100}$ </span>\n                  with probability\n                  <span className=\"colorGreen\"> {Math.round(this.state.beta * 100000)/1000}% </span>\n                </div>\n                <div>In the worst\n                  <span className=\"colorGreen\"> {Math.round((1-this.state.beta) * 100000)/1000}% </span>\n                  of days, your average loss is\n                  <span className=\"colorRed\"> {Math.round(this.state.cvar * 100 * this.state.budget)/100}$</span>\n                </div>\n              </div>\n            </div>\n            <InfoTable>\n              <tbody>\n                  <tr>\n                      <th>VAR</th>\n                      <th>CVAR</th>\n                      <th>ROI</th>\n                  </tr>\n                  { point_info }\n              </tbody>\n            </InfoTable>\n            <AllocationTable>\n              <tbody>\n                  <tr>\n                      <th>Ticker</th>\n                      <th>weight</th>\n                  </tr>\n                  { allocation_info }\n              </tbody>\n            </AllocationTable>\n            <SVG\n              ref={svg => this.svg = svg}\n            >\n            </SVG>\n\n {/*<div>\n               VAR:\n               <div>\n                 {this.props.data.var}\n               </div>\n             </div>\n             <div>\n               CVAR:\n               <div>\n                 {this.props.data.cvar}\n               </div>\n             </div>\n             <div>\n               Allocation:\n               <div>\n                 {this.props.data.allocation}\n               </div>\n             </div>*/}\n          </StyledOutputs>\n        );\n    }\n}\n\nexport default StockOutputs;\n","import React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport styled from 'styled-components';\n\nconst StyledResults = styled.div`\n    height: 100%;\n    .tableTitle {\n        margin-top: 20px;\n        text-align: center;\n    }\n`;\n\nconst SVG = styled.svg`\n    width: 100%;\n    height: 100%;\n\n    .links line {\n      stroke: #888;\n      stroke-width: 4;\n    }\n\n    .nodes circle {\n      pointer-events: all;\n      stroke: none;\n      stroke-width: 15px;\n      cursor: pointer;\n    }\n\n\n\n    #utilizationButton {\n        padding: 5px 10px;\n        border: 1px solid #AAA;\n        width: 100px;\n        text-align: center;\n        cursor: pointer;\n        background-color: #DEDEDE;\n        pointer-events: auto;\n    }\n\n    select {\n        position: absolute;\n        bottom: 8px;\n        right: 8px;\n        -webkit-appearance: button;\n        -webkit-border-radius: 2px;\n        -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n        -webkit-padding-end: 20px;\n        -webkit-padding-start: 2px;\n        -webkit-user-select: none;\n        background-image: url(http://i62.tinypic.com/15xvbd5.png), -webkit-linear-gradient(#FAFAFA, #F4F4F4 40%, #E5E5E5);\n        background-position: 97% center;\n        background-repeat: no-repeat;\n        border: 1px solid #AAA;\n        color: #555;\n        overflow: hidden;\n        padding: 5px 35px 5px 10px;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        pointer-events: auto;\n    }\n`\n\nconst PathTable = styled.table`\n    border: 1px solid steelblue;\n    background-color: rgba(255, 255, 255, .2);\n    float: right;\n\n    th {\n        padding: 3px 10px;\n    }\n\n    td {\n        padding: 5px 10px;\n        text-align: center;\n    }\n\n    .selected {\n        background-color: rgba(200, 200, 200, .6);\n    }\n`;\n\nconst OuterTable = styled.table`\n    font-size: 14px;\n    color: white;\n    background-color: #444;\n    border-radius: 10px;\n    margin: 30px auto;\n\n    tr {\n        border: 1px solid gray;\n    td {\n        padding: 10px;\n    }\n    .border-bottom {\n        border-bottom: 1px solid white;\n        padding: 6px 0px;\n    }\n    .border-right {\n        border-right: 1px solid white;\n        padding: 0px 6px;\n    }\n`;\n\nlet colors = [\"#1abc9c\", \"#e74c3c\", \"#3498db\", \"#9b59b6\", \"#34495e\", \"#e67e22\", \"#f1c40f\"];\nlet dashes = [\"5,5\", \"10,10\", \"20, 20\", \"20,10,5,5,5,10\", \"10,10,5,10\"]\n\nclass ForceGraph extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            simulation: \"\",\n            numSelected: 0,\n            firstSelected: null,\n            secondSelected: null,\n            nodeSize: 9,\n            edgeLength: 100,\n            flows: [],\n            allocation: [],\n            showPaths: false,\n            showUtilization: 0,\n            edgesByTunnel: [],\n            nodesByTunnel: [],\n            tunnelIndex: 0,\n            scenario: 0,\n            downLinks: [],\n            dashLinks: [],\n            colorNodes: [],\n            scenarios: [],\n            flowid: null,\n            backFlowid: null,\n            tips: [],\n            graph: null,\n            num_nodes: 0,\n        }\n        this.click = this.click.bind(this);\n        this.arrowPress = this.arrowPress.bind(this);\n        this.dragstarted = this.dragstarted.bind(this);\n        this.dragged = this.dragged.bind(this);\n        this.dragended = this.dragended.bind(this);\n        this.changeTunnel = this.changeTunnel.bind(this);\n        this.showUtilization = this.showUtilization.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.drawGraph(this.props.topology)\n    }\n\n    componentWillReceiveProps(props) {\n        this.clearGraph();\n        this.drawGraph(props.topology);\n        this.setState({\n            num_nodes: props.num_nodes,\n            f: props.flows,\n            T: props.T,\n            Tf: props.Tf,\n            links: props.links,\n            allocation: props.allocation,\n            demand: props.demand,\n            probabilities: props.probabilities,\n            scenarios: props.scenarios,\n            scenario: 0,\n            showUtilization: 0,\n            flowid: null,\n            downLinks: [],\n            X: props.X,\n            var: props.var,\n            cvar: props.cvar,\n        }, () => {\n            let flows = {}\n            props.flows.forEach((nodes, flowid) => {\n                let tunnels = this.getTunnels(flowid, nodes[0], nodes[1]);\n                flows[flowid] = {\n                    id: flowid,\n                    src: nodes[0].toString(),\n                    dst: nodes[1].toString(),\n                    tunnels: tunnels,\n                    demand: props.demand[flowid],\n                };\n            })\n            let satisfiedDemand = [];\n            if (props.scenarios) {\n                let totalDemand = props.demand.reduce((i, j) => i + j);\n                props.scenarios.forEach((scenario, s) => {\n                    let sentTraffic = this.state.graph ? new Array(this.state.graph.links.length).fill(0) : [];\n                    let satisfied = 0;\n                    Object.values(flows).forEach((flow, f) => {\n                        let total_weight = 0;\n                        let numAvailable = 0;\n                        flow.tunnels.forEach((tunnel, t) => {\n                            total_weight += props.X[s][tunnel.id] === 1 ? this.state.allocation[f][t] : 0;\n                            numAvailable += props.X[s][tunnel.id] === 1 ? 1 : 0;\n                        });\n                        flow.tunnels.forEach((tunnel, t) => {\n\n                            let weight = 0\n                            if (props.X[s][tunnel.id] === 1) {\n                                weight = total_weight !== 0 ?\n                                        (this.state.allocation[f][t] / total_weight)  :\n                                        (1 / numAvailable);\n                            } else {\n                                weight = 0;\n                            }\n                            let congested = false;\n                            tunnel.links.forEach(link => {\n                                let ls = this.state.graph.links.filter((l, index) => index === link.index);\n                                if (ls[0] && sentTraffic[link.index] >= ls[0].capacity) {\n                                    congested = true;\n                                }\n                            })\n                            if (!congested) {\n                                tunnel.links.forEach(link => {\n                                    sentTraffic[link.index] += weight * flow.demand\n                                });\n                                satisfied += weight * flow.demand\n                            }\n                        })\n                    })\n                    satisfiedDemand.push(satisfied / totalDemand)\n                });\n            };\n            this.setState({\n                flows,\n                scenarioSatisfaction: satisfiedDemand,\n            }, this.updateGraph)\n        });\n    }\n\n    componentDidUpdate(state) {\n        // this.drawGraph()\n    }\n\n    dragstarted(d) {\n      if (!d3.event.active) this.state.simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    dragged(d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    }\n\n    dragended(d) {\n      if (!d3.event.active) this.state.simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    handleScenario(scenario) {\n        let downLinks = [];\n        this.state.scenarios[scenario].forEach((scenario, i) => {\n            if (!scenario) {\n                downLinks.push(i);\n                downLinks.push(this.getBackLink(this.state.links[i]));\n            }\n        });\n        this.setState({\n            downLinks: downLinks,\n            scenario: scenario,\n        }, () => {\n            let flows = {}\n            this.state.f.forEach((nodes, flowid) => {\n                let tunnels = this.getTunnels(flowid, nodes[0], nodes[1]);\n                flows[flowid] = {\n                    id: flowid,\n                    src: nodes[0].toString(),\n                    dst: nodes[1].toString(),\n                    tunnels: tunnels,\n                    demand: this.state.demand[flowid],\n                };\n            })\n            this.setState({\n                flows,\n            }, () => this.showUtilization(this.state.showUtilization))\n        });\n    }\n\n    colorLinks(linkIndices, color){\n        let colorLinks = d3.selectAll('line').filter((d) => {\n            let filter = false;\n            linkIndices.forEach(index => {\n                if (index === d.index) { filter = true }\n            })\n            return filter;\n        })\n        colorLinks.style(\"stroke-opacity\", .6);\n        colorLinks.style(\"stroke\", color);\n    }\n\n    colorNodes(nodes, color){\n        let colorNodes = d3.selectAll('circle').filter(function(d) {return (nodes.includes(d.id))})\n        colorNodes.style(\"fill\", color);\n    }\n\n    dashLinks(links, dash){\n        let forwardLinks = d3.selectAll('line').filter((d) => {\n            let filter = false;\n            links.forEach(link => {\n                if (link.src === d.source.id && link.dst === d.target.id) { filter = true }\n            })\n            return filter;\n        })\n        let backLinks = d3.selectAll('line').filter((d) => {\n            let filter = false;\n            links.forEach(link => {\n                if (link.dst === d.source.id && link.src === d.target.id) { filter = true }\n            })\n            return filter;\n        })\n        forwardLinks.style(\"stroke-opacity\", 1);\n        forwardLinks.style(\"stroke-dasharray\", dash);\n        backLinks.style(\"stroke-opacity\", 1);\n        backLinks.style(\"stroke-dasharray\", dash);\n        forwardLinks.attr('marker-end','url(#arrowhead)')\n    }\n\n    getTunnelNodes(tunnel) {\n        let nodes = []\n        tunnel.links.forEach(link => {\n            if (!nodes.includes(link.src)) { nodes.push(link.src) };\n            if (!nodes.includes(link.dst)) { nodes.push(link.dst) };\n        })\n        return nodes;\n    }\n\n\n    getFlow(node1, node2) {\n        let ret = null\n        Object.values(this.state.flows).forEach(flow => {\n            if (flow.src === node1 && flow.dst === node2) {\n                ret = flow\n            }\n        });\n        return ret\n    }\n\n    getTunnels(f, node1, node2) {\n        let allTunnels = []\n        let tunnels = this.state.Tf[f];\n        let total_weight = 0;\n        let numAvailable = 0;\n        tunnels.forEach((tunnel, t) => {\n            total_weight += this.state.X[this.state.scenario][tunnel - 1] === 1 ? this.state.allocation[f][t] : 0;\n            numAvailable += this.state.X[this.state.scenario][tunnel - 1] === 1 ? 1 : 0;\n        });\n\n        tunnels.forEach((tunnel, t) => {\n            let availability = 0;\n            this.state.probabilities.forEach((prob, s) => {\n                availability += prob * this.state.X[s][tunnel - 1];\n            })\n            let weight = 0\n            if (this.state.X[this.state.scenario][tunnel - 1] === 1) {\n                weight = total_weight !== 0 ?\n                        (this.state.allocation[f][t] / total_weight)  :\n                        (1 / numAvailable);\n            } else {\n                weight = 0;\n            }\n\n\n            let edges_used = this.state.T[tunnel - 1]\n            let links = [];\n            edges_used.forEach(edge => {\n                links.push({\n                    \"src\": this.state.links[edge-1][0].toString(),\n                    \"dst\": this.state.links[edge-1][1].toString(),\n                    \"index\": edge - 1,\n                });\n            });\n            allTunnels.push({\n                links,\n                \"allocation\": this.state.allocation[f][t],\n                \"weight\": weight,\n                \"sent\": this.state.demand[f] * weight,\n                \"availability\": Math.round(availability * 1000000) / 1000000,\n                \"id\": (tunnel - 1),\n            })\n        })\n        return allTunnels\n    }\n\n    getBackLink(link) {\n        let backindex = -1;\n        this.state.links.forEach((l, i) => {\n            if (l[0] === link[1] && l[1] === link[0]) { backindex = i }\n        });\n        return backindex;\n    }\n\n    addTip(id, line1, line2) {\n        let circle = d3.selectAll(\"circle\").filter(function (c, i) { return (c.id === id);});\n        let g = circle.select(function() { return this.parentNode; })\n        let tip = g.append(\"g\")\n          .attr(\"class\", \"tip\")\n          .attr(\"transform\", \"translate(\" + 6  + \",\" + 6 + \")\");\n\n        var rect = tip.append(\"rect\")\n          .style(\"fill\", \"white\")\n          .style(\"stroke\", \"steelblue\")\n          .style(\"opacity\", .8)\n\n        tip.append(\"text\")\n          .text(line1)\n          .attr(\"dy\", \"1.2em\")\n          .attr(\"x\", 8);\n\n        tip.append(\"text\")\n          .text(line2)\n          .attr(\"dy\", \"2.4em\")\n          .attr(\"x\", 8);\n\n        let bbox = tip.node().getBBox();\n        rect.attr(\"width\", bbox.width + 15)\n            .attr(\"height\", bbox.height + 10)\n    }\n\n    updateGraph() {\n        d3.selectAll('.tip').remove();\n        d3.selectAll('line').each(function(d) {d3.select(this).style(\"stroke-opacity\", .1)});\n        d3.selectAll('line').each(function(d) {d3.select(this).style(\"stroke-dasharray\", \"\")});\n        d3.selectAll('line').each(function(d) {d3.select(this).style(\"stroke\", \"#888\")});\n        d3.selectAll('line').attr('marker-end','');\n        d3.selectAll('circle').each(function(d) {d3.select(this).style(\"fill\", \"lightgrey\")});\n        d3.selectAll(\".aEnd\").style(\"opacity\", this.state.showUtilization);\n\n        this.dashLinks(this.state.dashLinks, \"5,5\");\n        this.colorNodes(this.state.colorNodes, \"#aaa\");\n        d3.selectAll(\"circle\").filter((c, i) => (c.id === this.state.firstSelected || c.id === this.state.secondSelected)).style(\"fill\", \"steelblue\");\n        this.state.tips.forEach(tip => {\n            this.addTip(tip.id, tip.line1, tip.line2);\n        })\n\n        if (this.state.firstSelected === null && this.state.secondSelected === null) {\n            this.resetColors();\n        }\n        this.colorLinks(this.state.downLinks, \"red\");\n\n    }\n\n    resetColors() {\n        d3.selectAll('line').each(function(d) {d3.select(this).style(\"stroke-opacity\", 1)});\n        d3.selectAll('line').each(function(d) {d3.select(this).style(\"stroke-dasharray\", \"\")});\n        d3.selectAll('line').each(function(d) {d3.select(this).style(\"stroke\", \"#888\")});\n        d3.selectAll('line').attr('marker-end','');\n        d3.selectAll('circle').each(function(d) {d3.select(this).style(\"fill\", \"black\")});\n    }\n\n    clearGraph() {\n        d3.selectAll(\"svg > .tip\").remove();\n        d3.selectAll(\"svg > .links\").remove();\n        d3.selectAll(\"svg > .nodes\").remove();\n        this.setState({\n            showPaths: false,\n            firstSelected: null,\n            secondSelected: null,\n            numSelected: 0,\n            tips: [],\n        }, () => {console.log(this.state)})\n    }\n\n    arrowPress(e) {\n        // this.showUtilization();\n        if (e.keyCode === 39 && this.state.flows[this.state.flowid]) {\n            let tunnelIndex = (this.state.tunnelIndex + 1 >= this.state.flows[this.state.flowid].tunnels.length) ? 0 : this.state.tunnelIndex + 1;\n            this.changeTunnel(tunnelIndex);\n        } else if (e.keyCode === 37 && this.state.flows[this.state.flowid]) {\n            let tunnelIndex = (this.state.tunnelIndex - 1 < 0) ? this.state.flows[this.state.flowid].tunnels.length - 1 : this.state.tunnelIndex - 1;\n            this.changeTunnel(tunnelIndex);\n        } else if (e.keyCode === 38 && this.state.scenarios.length > 0) {\n            e.preventDefault();\n            this.handleScenario(this.state.scenario - 1 < 0 ? this.state.scenarios.length - 1 : this.state.scenario - 1);\n        } else if (e.keyCode === 40 && this.state.scenarios.length > 0) {\n            e.preventDefault();\n            this.handleScenario(this.state.scenario + 1 < this.state.scenarios.length ? this.state.scenario + 1 : 0);\n        };\n\n    }\n\n    showUtilization(opacity) {\n        let linkTraffic = new Array(this.state.graph.links.length).fill(0);\n        for (let i = 0; i <= linkTraffic.length - 1; i++) {\n            Object.values(this.state.flows).forEach(flow => {\n                flow.tunnels.forEach(tunnel => {\n                    tunnel.links.forEach(link => {\n                        if (link.index === i) { linkTraffic[i] += tunnel.weight * flow.demand }\n                    })\n                })\n            })\n        }\n\n        for (let i = 0; i <= linkTraffic.length - 1; i++) {\n            let linklabel = d3.selectAll(\".aEnd\").filter(function (c, j) { return (j === i)});\n            linklabel.html(`${Math.round((linkTraffic[i] / linklabel.data()[0].capacity) * 10000) / 100}%`);\n            if (linkTraffic[i] / linklabel.data()[0].capacity > 1) {\n                linklabel.style(\"fill\", \"red\")\n            } else {\n                linklabel.style(\"fill\", \"black\")\n            }\n\n        }\n\n        this.setState({\n            linkTraffic: linkTraffic,\n            showUtilization: opacity,\n        }, this.updateGraph);\n    }\n\n    changeTunnel(tunnelIndex) {\n        let flowid = this.state.flowid;\n        let flow = this.state.flows[flowid];\n        let sent = flowid !== null ? (flow.tunnels[tunnelIndex].weight * flow.demand) : 0;\n        let tunnels = flowid !== null ? flow.tunnels : [];\n        let dashLinks = flowid !== null ? tunnels[tunnelIndex].links : [];\n        let colorNodes = flowid !== null ? this.getTunnelNodes(tunnels[tunnelIndex]) : [];\n        let backFlowid = this.state.backFlowid;\n        let backFlow = this.state.flows[backFlowid]\n        let sentBack = backFlowid !== null ? (backFlow.tunnels[tunnelIndex].weight * backFlow.demand) : 0;\n        this.setState({\n            tunnelIndex,\n            dashLinks,\n            colorNodes,\n            tips: [\n                {\n                    id: this.state.firstSelected,\n                    line1: `Node: ${this.state.firstSelected}`,\n                    line2: `Sent: ${sent}`,\n                },\n                {\n                    id: this.state.secondSelected,\n                    line1: `Node: ${this.state.secondSelected}`,\n                    line2: `Received: ${sent}`,\n                },\n            ],\n        }, this.updateGraph);\n    }\n\n    getNodeDemand(id) {\n        let demandedFrom = 0;\n        let demandedTo = 0;\n        Object.values(this.state.flows).forEach(flow => {\n            if (id === flow.src) { demandedFrom += this.state.demand[flow.id] }\n            if (id === flow.dst) { demandedTo += this.state.demand[flow.id] }\n        });\n        return [demandedTo, demandedFrom]\n    }\n\n    click(d) {\n      if(this.state.numSelected === 0 || this.state.numSelected === 2) {\n        // document.removeEventListener(\"keydown\", this.arrowPress, false);\n        let [demandedTo, demandedFrom] = this.getNodeDemand(d.id);\n        this.setState({\n            numSelected: 1,\n            firstSelected: d.id,\n            secondSelected: null,\n            showPaths: false,\n            dashLinks: [],\n            colorNodes: [],\n            tips: [\n                {\n                    id: d.id,\n                    line1: `Sent: ${demandedFrom}`,\n                    line2: `Received ${demandedTo}`,\n                }\n            ],\n        }, this.updateGraph);\n      } else if (this.state.numSelected === 1) {\n        if (this.state.firstSelected === d.id) {\n            this.setState({\n                numSelected: 0,\n                firstSelected: null,\n                secondSelected: null,\n                tips: [],\n                showPaths: false,\n                colorNodes: [],\n                dashLinks: [],\n            }, this.updateGraph);\n        } else {\n            let flow = this.getFlow(this.state.firstSelected, d.id);\n            let backFlow = this.getFlow(d.id, this.state.firstSelected);\n            this.setState({\n                numSelected: 2,\n                secondSelected: d.id,\n                showPaths: true,\n                flowid: flow ? flow.id : null,\n                backFlowid: backFlow ? backFlow.id : null,\n            }, () => { this.changeTunnel(0) })\n        }\n      }\n    }\n\n    drawGraph(topology) {\n        document.addEventListener(\"keydown\", this.arrowPress, false);\n        var simulation = d3.forceSimulation()\n            .force(\"link\", d3\n                .forceLink().id(function(d) { return d.id; })\n                .distance(function (d) {\n                    return 100;\n                })\n            )\n            .force(\"charge\", d3.forceManyBody().strength(-300))\n            .force(\"center\", d3.forceCenter(this.svg.getBoundingClientRect().width / 2, this.svg.getBoundingClientRect().height / 2));\n\n\n        this.setState({\n            simulation: simulation,\n        }, () => {\n            const svg = d3.select(this.svg);\n            svg.append('defs').append('marker')\n                .attr('id', 'arrowhead')\n                .attr('viewBox', '-0 -5 10 10')\n                .attr('refX', 13)\n                .attr('refY', 0)\n                .attr('orient', 'auto')\n                .attr('markerWidth', 3)\n                .attr('markerHeight', 13)\n                .attr('xoverflow', 'visible')\n                .append('svg:path')\n                .attr('d', 'M 0,-5 L 10 ,0 L 0,5')\n                .attr('fill', '#999')\n                .style('stroke','none');\n\n            d3.json(`./data/${topology}.json`)\n              .then((graph, error) => {\n              if (error) throw error;\n              this.setState({\n                ...this.state,\n                graph: graph,\n              })\n\n              var linkg = svg.append(\"g\")\n                .attr(\"class\", \"links\")\n                .selectAll(\"line\")\n                .data(graph.links)\n                .enter()\n                .append(\"g\")\n                .attr(\"class\", \"link\")\n\n\n              var link = linkg\n                .append(\"line\")\n                .attr(\"class\", \"link-line\")\n\n              var labelLine = svg.selectAll(\".link\")\n                .append(\"text\")\n                .attr('class', 'aEnd')\n                .data(graph.links)\n                .attr('x', function(d) { return d.source.x; })\n                .attr('y', function(d) { return d.source.y; })\n                .attr('text-anchor', 'middle')\n                .style(\"font-size\", \"10px\")\n                .style(\"opacity\", 0)\n                .text(\"yo\");\n\n              var div = d3.select(\"body\").append(\"div\")\n                .attr(\"class\", \"tooltip\")\n                .style(\"opacity\", 0);\n\n            // var edgepaths = svg.selectAll(\".edgepath\")\n            //     .data(graph.links)\n            //     .enter()\n            //     .append('path')\n            //     .attrs({'d': function(d) {return 'M '+d.source.x+' '+d.source.y+' L '+ d.target.x +' '+d.target.y},\n            //            'class':'edgepath',\n            //            'fill-opacity':0,\n            //            'stroke-opacity':0,\n            //            'fill':'blue',\n            //            'stroke':'red',\n            //            'id':function(d,i) {return 'edgepath'+i}})\n            //     .style(\"pointer-events\", \"none\");\n\n            // var edgelabels = svg.selectAll(\".edgelabel\")\n            //     .data(graph.links)\n            //     .enter()\n            //     .append('text')\n            //     .style(\"pointer-events\", \"none\")\n            //     .attrs({'class':'edgelabel',\n            //            'id':function(d,i){return 'edgelabel'+i},\n            //            'dx':80,\n            //            'dy':0,\n            //            'font-size':10,\n            //            'fill':'#aaa'});\n\n            // edgelabels.append('textPath')\n            //     .attr('xlink:href',function(d,i) {return '#edgepath'+i})\n            //     .style(\"pointer-events\", \"none\")\n            //     .text(function(d,i){return 'label '+i});\n\n              var node = svg.append(\"g\")\n                .attr(\"class\", \"nodes\")\n                .selectAll(\"circle\")\n                .data(graph.nodes)\n                .enter()\n                .append('g').attr(\"class\", \"wrapper\")\n                  .attr(\"width\", 10)\n                  .attr(\"height\", 10)\n                  .on(\"click\", this.click)\n                  .call(d3.drag()\n                      .on(\"start\", this.dragstarted)\n                      .on(\"drag\", this.dragged)\n                      .on(\"end\", this.dragended));\n\n              var circle = node.append(\"circle\")\n                  .attr(\"r\", 10)\n\n              node.append(\"text\")\n                .text(function (d) { return d.id; })\n                .style(\"text-anchor\", \"middle\")\n                .style(\"fill\", \"#999\")\n                .style(\"cursor\", \"pointer\")\n                .style(\"font-size\", 12)\n                .attr(\"transform\", function(d) {\n                  return \"translate(\" + 0 + \",\" + 4+ \")\"\n                });\n\n              node.append(\"title\")\n                  .text(function(d) { return d.id; });\n\n              //add tooltip\n              svg.selectAll(\"line\")\n                  .on(\"mouseover\", function(d) {\n                      div.transition()\n                          .duration(200)\n                          .style(\"opacity\", .9);\n                      div.html(\"<i>p</i> = \" + d.prob_failure) //+ \"<br/>\"  + d.close\n                          .style(\"left\", (d3.event.pageX) + \"px\")\n                          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n                      })\n                  .on(\"mouseout\", function(d) {\n                      div.transition()\n                          .duration(200)\n                          .style(\"opacity\", 0);\n                      });\n\n              this.state.simulation\n                  .nodes(graph.nodes)\n                  .on(\"tick\", ticked)\n\n              this.state.simulation.force(\"link\")\n                  .links(graph.links);\n\n              function xpos(s, t) {\n                  var angle = Math.atan2(t.y - s.y, t.x - s.x);\n                  return 30 * Math.cos(angle) + s.x;\n              };\n\n              function ypos(s, t) {\n                  var angle = Math.atan2(t.y - s.y, t.x - s.x);\n                  return 30 * Math.sin(angle) + s.y;\n              };\n\n\n              function ticked() {\n                link\n                    .attr(\"x1\", function(d) { return d.source.x; })\n                    .attr(\"y1\", function(d) { return d.source.y; })\n                    .attr(\"x2\", function(d) { return d.target.x; })\n                    .attr(\"y2\", function(d) { return d.target.y; });\n\n                svg.selectAll('text.aEnd')\n                    .attr('x', function(d) { return xpos(d.source, d.target); })\n                    .attr('y', function(d) { return ypos(d.source, d.target); });\n\n                svg.selectAll('text.zEnd')\n                    .attr('x', function(d) { return xpos(d.target, d.source); })\n                    .attr('y', function(d) { return ypos(d.target, d.source); });\n\n                // labelLine.attr('transform',function(d,i){\n                //     if (d.target.x<d.source.x){\n                //         let bbox = this.getBBox();\n                //         let rx = bbox.x+bbox.width/2;\n                //         let ry = bbox.y+bbox.height/2;\n                //         return 'rotate(180 '+ rx+' '+ ry+')';\n                //         }\n                //     else {\n                //         return 'rotate(0)';\n                //         }\n                // });\n\n                // edgepaths.attr('d', function(d) { var path='M '+d.source.x+' '+d.source.y+' L '+ d.target.x +' '+d.target.y;\n                //                                    //console.log(d)\n                //                                    return path});\n\n                // edgelabels.attr('transform',function(d,i){\n                //     if (d.target.x<d.source.x){\n                //         let bbox = this.getBBox();\n                //         let rx = bbox.x+bbox.width/2;\n                //         let ry = bbox.y+bbox.height/2;\n                //         return 'rotate(180 '+rx+' '+ry+')';\n                //         }\n                //     else {\n                //         return 'rotate(0)';\n                //         }\n                // });\n\n                node.attr(\"transform\", function(d) {\n                  return \"translate(\" + d.x + \",\" + d.y + \")\"\n                });\n              }\n            });\n        })\n    }\n\n  render() {\n    // let links = [];\n    // if (this.state.graph) {\n    //     links = this.state.graph.links.map(link => {\n    //         return <line className=\"link\" x=\"100\" y=\"100\"/>\n    //     })\n    //     console.log(d3.select(\"line\"))\n    // }\n    let path_info;\n    if (this.state.flowid) {\n        path_info = this.state.flows[this.state.flowid].tunnels.map((tunnel, i) => {\n            return <tr className={i === this.state.tunnelIndex ? \"selected\" : \"\"} key={i}>\n                        <td x=\"0\">Tunnel {i}</td>\n                        <td x=\"50\">{tunnel.weight}</td>\n                        <td x=\"80\">{tunnel.availability}</td>\n                    </tr>\n        })\n    }\n\n    let utilizationButton = this.state.showUtilization === 0 ?\n                            <div id=\"utilizationButton\" onClick={() => this.showUtilization(.6)}>Utilization</div> :\n                            <div id=\"utilizationButton\" onClick={() => this.showUtilization(0)}>Off</div>\n\n    let key = 0;\n    let demand = [];\n    let sentDemand = [];\n    let satisfied = [];\n    let thead = [];\n    let demandRows = [];\n    let sentRows = [];\n    let satisfiedRows = [];\n    let totalSatisfied = 0;\n    let totalDemand = 0;\n\n\n    let sentTraffic = this.state.graph ? new Array(this.state.graph.links.length).fill(0) : [];\n    for (let i = 1; i <= parseInt(this.state.num_nodes); i++) {\n        thead.push(<th className=\"border-bottom\" key={key++}>{i}</th>)\n        let demandRow = [];\n        let sentRow = [];\n        let satisfiedRow = [];\n        for (let j = 1; j <= parseInt(this.state.num_nodes); j++) {\n            let d = \"-\"\n            let sentDemand = 0\n            let satisfiedDemand = 0\n            Object.values(this.state.flows).forEach((flow, f) => {\n                if (flow.src === i.toString() && flow.dst === j.toString()) {\n                    d = flow.demand;\n                    flow.tunnels.forEach((tunnel, t) => {\n                        sentDemand += tunnel.sent\n                        let congested = false;\n                        tunnel.links.forEach(link => {\n                            let ls = this.state.graph.links.filter((l, index) => index === link.index);\n                            if (ls[0] && sentTraffic[link.index] >= ls[0].capacity) {\n                                congested = true;\n                            } else {\n                                // console.log(\"CONGESTION\")\n                            }\n                        })\n                        if (!congested) {\n                            tunnel.links.forEach(link => {\n                                sentTraffic[link.index] += tunnel.weight * flow.demand\n                            });\n                            satisfiedDemand += tunnel.weight * flow.demand\n                        }\n                    })\n                }\n            })\n            demandRow.push(<td>{d === \"-\" ? d : Math.round(d * 100)/100}</td>)\n            sentRow.push(<td>{sentDemand === 0 ? \"-\" : Math.round(satisfiedDemand * 100)/100}</td>)\n            satisfiedRow.push(<td>{d === \"-\" ? 0 : `${Math.round((satisfiedDemand * 100)/ d)}%`}</td>)\n            totalSatisfied += satisfiedDemand;\n            totalDemand += d === \"-\" ? 0 : d;\n        }\n        demandRows.push(<tr key={key++}><th className=\"border-right\">{i}</th>{demandRow}</tr>)\n        sentRows.push(<tr key={key++}><th className=\"border-right\">{i}</th>{sentRow}</tr>)\n        satisfiedRows.push(<tr key={key++}><th className=\"border-right\">{i}</th>{satisfiedRow}</tr>)\n\n    }\n    demand.push(<tr key={key++}><th></th>{thead}</tr>)\n    demand.push(demandRows)\n    sentDemand.push(<tr key={key++}><th></th>{thead}</tr>)\n    sentDemand.push(sentRows)\n    satisfied.push(<tr key={key++}><th></th>{thead}</tr>)\n    satisfied.push(satisfiedRows)\n\n    let scenarios;\n    if (this.state.scenarios && this.state.scenarioSatisfaction) {\n        scenarios = this.state.scenarios.map((scenario, i) => {\n            return (<option\n                    key={i}\n                    value={i}>{`Scenario ${i} (${Math.round(this.state.probabilities[i] * 1000000) / 10000}%)\n                                (${Math.round((this.state.scenarioSatisfaction[i]) * 1000000) / 10000})`}\n                    </option>)\n        })\n    }\n\n    let cvar;\n    if (this.state.cvar) {\n        cvar = (<tbody>\n                    <tr>\n                        <th className=\"border-bottom\" style={{\"padding-left\": \"10px\"}}>VAR</th>\n                        <th className=\"border-bottom\">CVAR</th>\n                    </tr>\n                    <tr>\n                        <td style={{\"padding-left\": \"20px\"}}>{this.state.var}</td>\n                        <td>{`${Math.round(this.state.cvar * 1000000) / 10000}%`}</td>\n                    </tr>\n                </tbody>)\n    }\n\n    return (\n      <StyledResults>\n          <SVG\n            ref={svg => this.svg = svg}\n          >\n            {/**<g className=\"l\">\n                { links }\n            </g>**/}\n            <foreignObject x=\"7\" y=\"7\" width=\"100%\" height=\"100%\" pointerEvents=\"none\">\n                { utilizationButton }\n            </foreignObject>\n            <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" pointerEvents=\"none\">\n                <select onChange={e => this.handleScenario(e.target.value)} value={this.state.scenario}>\n                    { scenarios }\n                </select>\n            </foreignObject>\n            {this.state.showPaths &&\n                <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" pointerEvents=\"none\" style={{\"padding\": \"14px\"}}>\n                  <PathTable>\n                    <tbody>\n                        <tr>\n                            <th></th>\n                            <th>weight</th>\n                            <th>availability</th>\n                        </tr>\n                        { path_info }\n                    </tbody>\n                  </PathTable>\n                </foreignObject>\n            }\n          </SVG>\n          <div className=\"tableTitle\">Demand</div>\n          <OuterTable>\n            <tbody>\n                { demand }\n            </tbody>\n          </OuterTable>\n          <div className=\"tableTitle\">Successful Demand</div>\n          <OuterTable>\n            <tbody>\n                { sentDemand }\n            </tbody>\n          </OuterTable>\n          <div className=\"tableTitle\">Satisfied Demand</div>\n          <OuterTable>\n            <tbody>\n                { satisfied }\n            </tbody>\n          </OuterTable>\n          <div className=\"tableTitle\">Loss</div>\n          <OuterTable>\n                { cvar }\n          </OuterTable>\n      </StyledResults>\n\n    )\n  }\n}\n\nexport default ForceGraph;\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport TEInputs from './TEInputs';\nimport StockInputs from './StockInputs';\nimport TEOutputs from './TEOutputs';\nimport Login from './Login';\nimport StockOutputs from './StockOutputs';\nimport ForceGraph from './ForceGraph';\n\nimport styled from 'styled-components';\nimport './style.css';\n\nconst TESection = styled.div`\n    width: 100vw;\n    height: 70vh;\n\n    #inputs {\n        text-align: center;\n        padding-top: 40px;\n        width: 100%;\n    }\n    #graph {\n        background-color: #EEE;\n        margin-top: 20px;\n        border: 1px solid gray;\n        height: 70vh;\n        width: 70%;\n        margin-left: auto;\n        margin-right: auto;\n    }\n`;\n\nconst StyledError = styled.div`\n    background-color: #CCC\n    padding: 20px;\n    text-align: center;\n    transition: .1s all;\n\n    &:hover {\n        background-color: #999;\n        cursor: pointer;\n    }\n`;\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            login: false,\n            te: {\n                inputs: {\n                    topology: \"Custom\",\n                    demand: \"1\",\n                    path: \"SMORE\",\n                    beta: \".9\",\n                    cutoff: \".0001\",\n                    k: \"4\",\n                    downscale_demand: \"1000\",\n                    zeroindex: \"false\",\n                    demand_matrix: \"true\",\n                    num_nodes: 0,\n                },\n                results: {\n                    var: 0,\n                    cvar: 0,\n                    allocation: [],\n                    flows: [],\n                    T: [],\n                    Tf: [],\n                    links: [],\n                },\n                show_results: false,\n            },\n            stocks: {\n                inputs: {\n                    tickers: [\n                        \"\"\n                    ],\n                    beta: .9,\n                    roi: 50,\n                    target: 40,\n                    days: 800,\n                    budget: 1000,\n                    KEYS: [\"F6JGTHROSNY4A8MV\", \"EGZPCEQOXI85VKRT\", \"ASDPVYC2XRAJJ81K\", \"M4XW13HI1CWYH0KN\"],\n                    key: 0,\n                },\n                results: {\n\n                },\n                show_results: false,\n            },\n            error: \"\",\n            mode: \"TE\",\n        };\n        this.setMode = this.setMode.bind(this);\n        this.login = this.login.bind(this);\n        this.removeError = this.removeError.bind(this);\n        this.handleTESubmit = this.handleTESubmit.bind(this);\n        this.handleTEInput = this.handleTEInput.bind(this);\n        this.handleStockInput = this.handleStockInput.bind(this);\n        this.handleTickerValue = this.handleTickerValue.bind(this);\n        this.handleAddTicker = this.handleAddTicker.bind(this);\n        this.handleTickerSubmit = this.handleTickerSubmit.bind(this);\n    }\n\n    setMode(mode) {\n        this.setState({\n            ...this.state,\n            mode: mode,\n        });\n    }\n\n    removeError() {\n        this.setState({\n            ...this.state,\n            error: \"\",\n        });\n    }\n\n    login(password) {\n        if (password === \"CVaR2019!\") {\n            this.setState({\n                ...this.state,\n                login: true,\n            });       \n        };\n    }\n\n    ////////////////////////////////////////////////////////////////////\n    /////////////////////////// Stock Methods //////////////////////////\n    ////////////////////////////////////////////////////////////////////\n    handleStockInput(value, type) {\n        this.setState({\n            ...this.state,\n            stocks: {\n                ...this.state.stocks,\n                inputs: {\n                    ...this.state.stocks.inputs,\n                    [type]: value,\n                },\n                show_results: false,\n            }\n        })\n    }\n\n    handleTickerValue(value, num) {\n        let newtickers = this.state.stocks.inputs.tickers;\n        newtickers[num] = value;\n        this.setState({\n            ...this.state,\n            stocks: {\n                inputs: {\n                    ...this.state.stocks.inputs,\n                    tickers: newtickers,\n                },\n                show_results: false,\n            },\n        })\n        // fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${value}&apikey=${this.state.stocks.inputs.KEY}`, {\n        //   method: \"GET\",\n        //   mode: \"cors\"\n        // }).then(res => {\n        //     console.log(res);\n        //     return res.json();\n        // })\n        // .then(data => {\n        //     console.log(data.bestMatches);\n        //     this.setState({\n        //         stocks: {\n        //             ...this.state.stocks,\n        //             tickerMatches: data.bestMatches,\n        //         }\n        //     }, () => {\n        //         console.log(this.state)\n        //     })\n        // })\n        // .catch(err => console.log(err))\n\n\n    }\n\n    handleAddTicker() {\n        let newtickers = this.state.stocks.inputs.tickers;\n        newtickers.push(\"\");\n        this.setState({\n            ...this.state,\n            stocks: {\n                ...this.state.stocks,\n                inputs: {\n                    ...this.state.stocks.inputs,\n                    tickers: newtickers,\n                },\n                show_results: false,\n            },\n        })\n    }\n\n    handleTickerSubmit() {\n        let returns = [];\n        let ticker_ordered = [];\n        console.log(this.state.stocks.inputs.key)\n        Promise.all(\n            this.state.stocks.inputs.tickers.map(ticker => {\n                return new Promise((resolve, reject) => {\n                    fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${ticker}&outputsize=full&apikey=${this.state.stocks.inputs.KEYS[this.state.stocks.inputs.key]}`, {\n                      method: \"GET\",\n                      mode: \"cors\"\n                    }).then(res => res.json())\n                    .then(data => {\n                        let daily_returns = []\n                        let daily_data = data[\"Time Series (Daily)\"];\n                        let close = \"4. close\";\n                        let days = Object.keys(daily_data);\n                        let last = daily_data[days[this.state.stocks.inputs.days + 1]][close]\n                        for (let i = this.state.stocks.inputs.days; i >= 0; i--) {\n                            let curr = daily_data[days[i]][close];\n                            daily_returns.push((curr - last) / last);\n                            last = curr;\n                        }\n                        returns.push(daily_returns);\n                        ticker_ordered.push(ticker);\n                        resolve();\n                    })\n                    .catch(error => {\n                        reject(error);\n                    });\n                })\n            })\n        )\n        .then(() => {\n            console.log({\n                \"nstocks\": this.state.stocks.inputs.tickers.length,\n                \"returns\": returns,\n                \"beta\": this.state.stocks.inputs.beta,\n                \"ticker_ordered\": ticker_ordered,\n              })\n            // var url = 'http://localhost:8080/api/cvarf';\n            var url = 'http://128.30.92.156:8080/api/cvarf';\n            fetch(url, {\n              method: \"POST\",\n              mode: \"cors\",\n              body: JSON.stringify({\n                \"nstocks\": this.state.stocks.inputs.tickers.length,\n                \"returns\": returns,\n                \"beta\": parseFloat(this.state.stocks.inputs.beta),\n                \"roi\": parseFloat(this.state.stocks.inputs.roi/this.state.stocks.inputs.budget),\n                \"target\": parseFloat(this.state.stocks.inputs.target/this.state.stocks.inputs.budget),\n              }),\n              headers:{\n                'Content-Type': 'application/json'\n              }\n            }).then(res => res.json())\n            .then(response => {\n                this.setState({\n                    ...this.state,\n                    stocks: {\n                        ...this.state.stocks,\n                        results: response,\n                        show_results: true,\n                        tickers: ticker_ordered,\n                    },\n                })\n            })\n            .catch(error => console.error('Error:', error));\n        })\n        .catch(error => {\n            console.log(error);\n            let oldkey = this.state.stocks.inputs.key;\n            let newkey = this.state.stocks.inputs.key+1 >= this.state.stocks.inputs.KEYS.length ? 0 : this.state.stocks.inputs.key+1\n            this.setState({\n                ...this.state,\n                stocks: {\n                    ...this.state.stocks,\n                    inputs: {\n                        ...this.state.stocks.inputs,\n                        key: newkey,\n                    },\n                },\n                error: {\n                    error: error,\n                    message: `API error with key ${oldkey}...`,\n                }\n            })\n        });\n    }\n\n    ////////////////////////////////////////////////////////////////////\n    /////////////////////////// TE Methods /////////////////////////////\n    ////////////////////////////////////////////////////////////////////\n    handleTEInput(value, type) {\n        console.log(this.state.te.inputs)\n        this.setState({\n            ...this.state,\n            te: {\n                ...this.state.te,\n                inputs: {\n                    ...this.state.te.inputs,\n                    [type]: value,\n                },\n                show_results: false,\n            }\n        })\n    }\n\n    handleTESubmit() {\n        // var url = 'http://localhost:8080/api/tecvar';\n        var url = 'http://128.30.92.156:8080/api/tecvar';\n        let data = {\n            topology: this.state.te.inputs.topology,\n            demand: this.state.te.inputs.demand,\n            path: this.state.te.inputs.path,\n            beta: this.state.te.inputs.beta,\n            cutoff: this.state.te.inputs.cutoff,\n        }\n        if (this.state.te.inputs.path.includes(\"ksp\")) {\n            data.k = `${this.state.te.inputs.path.split(\"_\")[1]}`;\n        } else {\n            data.k = \"4\";\n        }\n        switch (data.topology) {\n            case \"Custom\":\n                data.num_nodes = \"6\";\n                data.downscale_demand = \"1\";\n                data.zeroindex = \"false\";\n                data.demand_matrix = \"false\";\n                break;\n            case \"B4\":\n                data.num_nodes = \"12\";\n                data.downscale_demand = \"1\";\n                data.zeroindex = \"false\";\n                data.demand_matrix = \"true\";\n                break;\n            case \"IBM\":\n                data.num_nodes = \"17\";\n                data.downscale_demand = \"1000\";\n                data.zeroindex = \"false\";\n                data.demand_matrix = \"true\";\n                break;\n            case \"Abilene\":\n                data.num_nodes = \"12\";\n                data.downscale_demand = \"1000000\";\n                data.zeroindex = \"false\";\n                data.demand_matrix = \"true\";\n                break;\n            default:\n                data.num_nodes = \"12\";\n                data.downscale_demand = \"1000\";\n                data.zeroindex = \"false\";\n                data.demand_matrix = \"true\";\n                break;\n        }\n\n        fetch(url, {\n          method: \"POST\",\n          mode: \"cors\",\n          body: JSON.stringify(data),\n          headers:{\n            'Content-Type': 'application/json'\n          }\n        }).then(res => res.json())\n        .then(response => {\n            console.log(response)\n            this.setState({\n                ...this.state,\n                te: {\n                    ...this.state.te,\n                    inputs: {\n                        ...this.state.te.inputs,\n                        num_nodes: data.num_nodes,\n                        zeroindex: data.zeroindex,\n                    },\n                    results: response,\n                    show_results: true,\n                },\n            })\n        })\n        .catch(error => console.error('Error:', error));\n    }\n\n    render() {\n        var home;\n        var header;\n        if (this.state.mode === \"TE\") {\n            header = (<Header\n                modes={[\"TE\", \"Stocks\"]}\n                mode={this.state.mode}\n                setMode={this.setMode}\n            />)\n            home = (\n                <div>\n                    <TESection>\n                        <div id=\"inputs\">\n                            <TEInputs\n                              handleTESubmit={this.handleTESubmit}\n                              handleTEInput={this.handleTEInput}>\n                            </TEInputs>\n                        </div>\n                        <div id=\"graph\">\n                            {/*<img alt=\"graph\" src={`./img/${this.state.te.inputs.topology}.png`}/>*/}\n                            <ForceGraph\n                                num_nodes={this.state.te.inputs.num_nodes}\n                                topology={this.state.te.inputs.topology}\n                                T={this.state.te.results.T}\n                                Tf={this.state.te.results.Tf}\n                                links={this.state.te.results.links}\n                                flows={this.state.te.results.flows}\n                                allocation={this.state.te.results.allocation}\n                                demand={this.state.te.results.demand}\n                                probabilities={this.state.te.results.probabilities}\n                                scenarios={this.state.te.results.scenarios}\n                                X={this.state.te.results.X}\n                                var={this.state.te.results.var}\n                                cvar={this.state.te.results.cvar}\n                            />\n                        </div>\n                    </TESection>\n                    {/**this.state.te.show_results &&\n                        <TEOutputs\n                          data={this.state.te.results}\n                          num_nodes={this.state.te.inputs.num_nodes}\n                          zeroindex={this.state.te.inputs.zeroindex}\n                        />**/\n                    }\n                </div>\n            )\n        } else if (!this.state.login) {\n            home = <Login login={this.login} />\n            header = (<Header\n                modes={[\"TE\", \"Stocks\"]}\n                mode={this.state.mode}\n                setMode={this.setMode}\n            />)\n        } else  {\n            header = (<Header\n                modes={[\"TE\", \"Stocks\"]}\n                mode={this.state.mode}\n                setMode={this.setMode}\n            />)\n            home = (<div>\n                <StockInputs\n                    handleTickerValue={this.handleTickerValue}\n                    handleStockInput={this.handleStockInput}\n                    handleAddTicker={this.handleAddTicker}\n                    handleTickerSubmit={this.handleTickerSubmit}\n                    tickers={this.state.stocks.inputs.tickers}\n                    tickerMatches={this.state.stocks.tickerMatches}\n                >\n                </StockInputs>\n                {this.state.stocks.show_results &&\n                    <StockOutputs\n                    data={this.state.stocks.results}\n                    roi={parseFloat(this.state.stocks.inputs.roi)}\n                    target={parseFloat(this.state.stocks.inputs.target)}\n                    tickers={this.state.stocks.tickers}\n                    budget={parseFloat(this.state.stocks.inputs.budget)}\n                    />\n                }\n                </div>)\n        }\n        return (\n          <div>\n            { header }\n            {this.state.error !== \"\" &&\n                <StyledError onClick={this.removeError}>{this.state.error.message}</StyledError>\n            }\n            { home }\n          </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}