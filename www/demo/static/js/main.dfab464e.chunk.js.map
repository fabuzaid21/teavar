{"version":3,"sources":["Header.jsx","TEInputs.jsx","StockInputs.jsx","TEOutputs.jsx","Login.jsx","StockOutputs.jsx","ForceGraph.jsx","App.js","serviceWorker.js","index.js"],"names":["StyledHeader","styled","div","_templateObject","Header","_this","this","modes","props","map","mode","num","react_default","a","createElement","key","className","onClick","e","setMode","id","Component","StyledInputs","TEInputs_templateObject","TEInputs","name","onChange","handleTEInput","target","value","default","type","placeholder","handleTESubmit","StockInputs_templateObject","StockInputs","matches","tickerInputs","tickers","ticker","concat","handleTickerValue","tickerMatches","StockInputs_StyledInputs","handleAddTicker","handleStockInput","handleTickerSubmit","TEOutputs_templateObject","Table","table","_templateObject2","StyledLogin","Login_templateObject","Login_templateObject2","Login","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","password","v","setState","_this2","Login_StyledInputs","handlePassword","login","StyledOutputs","StockOutputs_templateObject","SVG","svg","StockOutputs_templateObject2","AllocationTable","_templateObject3","InfoTable","_templateObject4","StockOutputs","console","log","beta","data","optimal_b","roi","budget","cvar","optimal_cvar","var","optimal_var","optimal_a","selected","allocation","gain","drawGraph","bind","assertThisInitialized","selectLine","highlightCircles","d","_this3","d3","style","attr","circle","filter","c","i","beta_vals","g_vals","gains","b","values","g","j","line_id","point_id","length","push","xScale","domain","range","width","scalesY","yScale","height","color","append","line","x","y","lines","selectAll","enter","on","text","formatter","xAxis","ticks","tickFormat","yAxis","allocation_info","point_info","_this4","statement_header","statement_weights","forEach","w","Math","round","ref","StyledResults","ForceGraph_templateObject","ForceGraph_templateObject2","ScenarioTable","ForceGraph_templateObject3","PathTable","ForceGraph_templateObject4","OuterTable","_templateObject5","colors","ForceGraph","simulation","numSelected","firstSelected","secondSelected","nodeSize","edgeLength","flows","showPaths","showUtilization","edgesByTunnel","nodesByTunnel","tunnelIndex","scenario","downLinks","dashLinks","colorNodes","secondaryNodes","secondaryTunnels","scenarios","capacity","failure_probabilities","linkUtilization","flowid","backFlowid","tips","graph","num_nodes","limitTraffic","click","arrowPress","dragstarted","dragged","dragended","changeTunnel","topology","clearGraph","f","T","Tf","links","demand","probabilities","X","simulateTraffic","nodes","src","toString","dst","permissable","scenarioSatisfaction","Array","fill","totalDemand","reduce","s","scenarioSentTraffic","satisfiedDemandForScenario","flow","satisfiedDemandForFlow","flowTunnels","getTunnels","tunnel","t","weight","sent","congested","minSpace","max","apply","toConsumableArray","link","min","index","satisfied","tunnels","updateGraph","active","alphaTarget","restart","fx","fy","opacity","String","bool","_this5","forwardLinks","source","backLinks","includes","dash","animate","clearInterval","dashInterval","offset","setInterval","node1","node2","ret","_this6","allTunnels","total_weight","numAvailable","availability","prob","edges_used","edge","backindex","l","line1","line2","tip","select","parentNode","rect","bbox","node","getBBox","_this7","remove","each","colorLinks","animateLinks","addTip","resetColors","_this8","keyCode","preventDefault","handleScenario","_this9","linkTraffic","_loop","linklabel","html","_this10","getTunnelNodes","_this$getNodeDemand","getNodeDemand","_this$getNodeDemand2","slicedToArray","demandedTo","demandedFrom","_this11","_this12","_this$setState","_this$getNodeDemand3","_this$getNodeDemand4","defineProperty","getFlow","backFlow","_this13","document","addEventListener","force","distance","strength","getBoundingClientRect","then","error","objectSpread","that","xpos","angle","atan2","cos","ypos","sin","transition","duration","pageX","pageY","path_info","_this14","limitButton","handleLimit","utilizationButton","handleUtilization","sentDemand","thead","demandRows","sentRows","satisfiedRows","_loop2","demandRow","sentRow","satisfiedRow","_loop3","satisfiedDemand","parseInt","paddingLeft","ForceGraph_SVG","pointerEvents","padding","TESection","App_templateObject","StyledError","App_templateObject2","App","te","inputs","path","cutoff","k","downscale_demand","zeroindex","demand_matrix","results","show_results","stocks","days","KEYS","removeError","newtickers","returns","ticker_ordered","Promise","all","resolve","reject","fetch","method","res","json","daily_returns","daily_data","keys","last","curr","catch","nstocks","body","JSON","stringify","parseFloat","headers","Content-Type","response","oldkey","newkey","message","split","home","header","src_Header","src_TEInputs","src_ForceGraph","src_StockInputs","src_StockOutputs","src_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dfab464e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled.div`\n    position: fixed;\n    height: 67px;\n    width: 100vw;\n    top: 0;\n    border-bottom: 1px solid #222;\n    box-shadow: 0 1px 0 #262626;\n    background-color: #191919;\n    background-image: -webkit-gradient(linear,left top,left bottom,from(#282828),to(#191919));\n    background-image: -webkit-linear-gradient(top,#282828,#191919);\n    background-image: linear-gradient(top,#282828,#191919);\n    background-repeat: no-repeat;\n    z-index: 10;\n\n    #left {\n        position: absolute;\n        height: 100%;\n        left: 10px;\n    }\n\n    #center {\n        position: absolute;\n        height: 100%;\n        left: 50%;\n        transform: translateX(-50%);\n        color: white;\n\n        #title {\n            font-size: 25px;\n            padding-top: 15px;\n        }\n    }\n\n    #right {\n        position: absolute;\n        height: 100%;\n        padding-top: 20px;\n        padding-right: 20px;\n        right: 10px;\n        color: white;\n\n        .link {\n            cursor: pointer;\n            &:hover {\n                border-bottom: 1px solid white;\n            }\n        }\n    }\n`;\n\n\nclass Header extends Component {\n  render() {\n    let modes = this.props.modes.map((mode, num) => {\n        return this.props.mode === mode ? \"\" :\n            <div key={num} className=\"link\" onClick={e => this.props.setMode(mode)}>{mode}</div>\n    })\n    return (\n      <div>\n        <StyledHeader>\n            <div id=\"left\">\n            </div>\n            <div id=\"center\">\n                <div id=\"title\">\n                    TEAVAR Demo\n                </div>\n            </div>\n            <div id=\"right\">\n                {modes}\n            </div>\n        </StyledHeader>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst StyledInputs = styled.div`\n    form {\n        margin: 10px;\n        select {\n         -webkit-appearance: button;\n         -webkit-border-radius: 2px;\n         -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n         -webkit-padding-end: 20px;\n         -webkit-padding-start: 2px;\n         -webkit-user-select: none;\n         background-image: url(http://i62.tinypic.com/15xvbd5.png), -webkit-linear-gradient(#FAFAFA, #F4F4F4 40%, #E5E5E5);\n         background-position: 97% center;\n         background-repeat: no-repeat;\n         border: 1px solid #AAA;\n         color: #555;\n         font-size: inherit;\n         overflow: hidden;\n         padding: 5px 10px;\n         text-overflow: ellipsis;\n         white-space: nowrap;\n         width: 370px;\n        }\n    }\n    .input {\n      text-align: center;\n      width: 100%;\n      display: block;\n      height: 50px;\n\n      select {\n        border: none;\n      }\n\n      input, form {\n        font-size: 20px;\n        margin-left: 0;\n        margin-right: 0;\n        display: inline-block;\n        border-left: none;\n        border-right: 1px solid #AAA;\n        border-top: 1px solid #AAA;\n        border-bottom: 1px solid #AAA;\n        border-top-left-radius: 0px;\n        border-bottom-left-radius: 0px;\n      }\n    }\n\n    .input_label {\n      color: white;\n      display: inline-block;\n      width: 90px;\n      height: calc(100% - 29px);\n      background-color: #999;\n      vertical-align: top;\n      margin: 10px 0px;\n      padding: 6px 10px;\n      border-left: 1px solid #AAA;\n      border-top: 1px solid #AAA;\n      border-bottom: 1px solid #AAA;\n      font-size: 18px;\n    }\n\n    input {\n      position: relative;\n      display: block;\n      margin: 10px auto;\n      -webkit-appearance: button;\n      -webkit-border-radius: 2px;\n      -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n      -webkit-padding-end: 20px;\n      -webkit-padding-start: 2px;\n      -webkit-user-select: none;\n      border: 1px solid #AAA;\n      color: #555;\n      font-size: inherit;\n      overflow: hidden;\n      padding: 5px 10px;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      width: 350px;\n    }\n    button {\n      margin: 10px;\n      font-size: 20px;\n    }\n`;\n\nclass TEInputs extends Component {\n    render() {\n        return (\n          <div>\n            <StyledInputs>\n              <div className=\"input\">\n                  <div className=\"input_label\">Topology</div>\n                  <form>\n                  <select name=\"dropdown\" onChange={e => this.props.handleTEInput(e.target.value, \"topology\")}>\n                      <option value=\"B4\" default>B4</option>\n                      <option value=\"Custom\">Small Net</option>\n                      <option value=\"IBM\">IBM</option>\n                      <option value=\"Abilene\">Abilene</option>\n                  </select>\n                  </form>\n                </div>              \n              <div className=\"input\">\n                  <div className=\"input_label\">Demand</div>\n                  <form>\n                  <select name=\"dropdown\" onChange={e => this.props.handleTEInput(e.target.value, \"demand\")}>\n                      <option value=\"1\" default>1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                  </select>\n                </form>\n              </div>\n              <div className=\"input\">\n                  <div className=\"input_label\">Paths</div>\n                  <form>\n                  <select name=\"dropdown\" onChange={e => this.props.handleTEInput(e.target.value, \"path\")}>\n                      <option value=\"ED\" default>ED</option>\n                      <option value=\"SMORE\">Oblivious</option>\n                      <option value=\"ksp_2\">KSP_2</option>\n                      <option value=\"ksp_4\">KSP_4</option>\n                      <option value=\"ksp_6\">KSP_6</option>\n                  </select>\n                </form>\n              </div>\n              <div className=\"input\">\n                <div className=\"input_label\">Beta (%)</div>\n                <input\n                  type=\"text\"\n                  placeholder=\"0.9\"\n                  onChange={e => this.props.handleTEInput(e.target.value, \"beta\")}\n                />\n              </div>\n              <div className=\"input\">\n                <div className=\"input_label\">Cutoff (%)</div>\n                <input\n                  type=\"text\"\n                  placeholder=\"0.0001\"\n                  onChange={e => this.props.handleTEInput(e.target.value, \"cutoff\")}\n                />\n              </div>\n              <button onClick={e => this.props.handleTESubmit()}>\n                Submit\n              </button>\n            </StyledInputs>\n          </div>\n        );\n    }\n}\n\nexport default TEInputs;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nconst StyledInputs = styled.div`\n    margin 40px auto;\n    text-align: center;\n\n    form {\n        margin: 10px;\n        select {\n         -webkit-appearance: button;\n         -webkit-border-radius: 2px;\n         -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n         -webkit-padding-end: 20px;\n         -webkit-padding-start: 2px;\n         -webkit-user-select: none;\n         background-image: url(http://i62.tinypic.com/15xvbd5.png), -webkit-linear-gradient(#FAFAFA, #F4F4F4 40%, #E5E5E5);\n         background-position: 97% center;\n         background-repeat: no-repeat;\n         border: 1px solid #AAA;\n         color: #555;\n         font-size: inherit;\n         overflow: hidden;\n         padding: 5px 10px;\n         text-overflow: ellipsis;\n         white-space: nowrap;\n         width: 300px;\n        }\n    }\n\n\n    .input {\n      text-align: center;\n      width: 100%;\n      display: block;\n      height: 50px;\n\n      input {\n        display: inline-block;\n        border-left: none;\n        border-right: 1px solid #AAA;\n        border-top: 1px solid #AAA;\n        border-bottom: 1px solid #AAA;\n        border-top-left-radius: 0px;\n        border-bottom-left-radius: 0px;\n      }\n    }\n\n    .input_label {\n      color: white;\n      display: inline-block;\n      width: 75px;\n      height: calc(100% - 34px);\n      background-color: #999;\n      vertical-align: top;\n      margin: 10px 0px;\n      padding: 6px 10px;\n      border-left: 1px solid #AAA;\n      border-top: 1px solid #AAA;\n      border-bottom: 1px solid #AAA;\n      font-size: 14px;\n    }\n\n    input {\n      position: relative;\n      display: block;\n      margin: 10px auto;\n      -webkit-appearance: button;\n      -webkit-border-radius: 2px;\n      -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n      -webkit-padding-end: 20px;\n      -webkit-padding-start: 2px;\n      -webkit-user-select: none;\n      border: 1px solid #AAA;\n      color: #555;\n      font-size: inherit;\n      overflow: hidden;\n      padding: 5px 10px;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      width: 278px;\n    }\n    .matches {\n      position: relative;\n      top: 10px;\n    }\n    button {\n      margin: 10px;\n    }\n`;\n\nclass StockInputs extends Component {\n\n    render() {\n        const tickerInputs =\n            this.props.tickers.map((ticker, num) => {\n                return (\n                    <input\n                      key={num}\n                      type=\"text\"\n                      placeholder={`Ticker ${num}`}\n                      value={ticker}\n                      onChange={e => this.props.handleTickerValue(e.target.value, num)}\n                    />\n\n                );\n            });\n\n        let matches\n        if (this.props.tickerMatches) {\n          matches = this.props.tickerMatches.map(ticker => (<div>{ticker[\"1. symbol\"]}</div>))\n        }\n\n        return (\n          <div>\n            <StyledInputs>\n              <div className=\"tickers_label\">Portfolio Tickers</div>\n\n                {tickerInputs}\n              <div>\n                {matches}\n              </div>\n              <button onClick={e => this.props.handleAddTicker()}>\n                Add\n              </button>\n              <div className=\"input\">\n                <div className=\"input_label\">Budget ($)</div>\n                <input\n                  type=\"text\"\n                  placeholder=\"1000\"\n                  onChange={e => this.props.handleStockInput(e.target.value, \"budget\")}\n                />\n              </div>\n              <div className=\"input\">\n                <div className=\"input_label\">Return ($)</div>\n                <input\n                  type=\"text\"\n                  placeholder=\"50\"\n                  onChange={e => this.props.handleStockInput(e.target.value, \"roi\")}\n                />\n              </div>\n              <div className=\"input\">\n                <div className=\"input_label\">Loss ($)</div>\n                <input\n                  type=\"text\"\n                  placeholder=\"40\"\n                  onChange={e => this.props.handleStockInput(e.target.value, \"target\")}\n                />\n              </div>\n              {/*<input\n                type=\"text\"\n                placeholder=\"1000\"\n                onChange={e => this.props.handleStockInput(e.target.value, \"days\")}\n              />*/}\n              <button onClick={e => this.props.handleTickerSubmit()}>\n                Submit\n              </button>\n            </StyledInputs>\n          </div>\n        );\n    }\n}\n\n\nexport default StockInputs;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst Allocation = styled.div`\n  color: white;\n`;\n\nconst Table = styled.table`\n  color: white;\n  background-color: #444;\n  border-radius: 10px;\n  margin: 30px auto;\n  tr {\n    border: 1px solid gray;\n    td {\n      padding: 10px;\n    }\n  }\n  .border-bottom {\n    border-bottom: 1px solid white;\n    padding: 6px 0px;\n  }\n  .border-right {\n    border-right: 1px solid white;\n    padding: 0px 6px;\n  }\n`;\n\n\nclass TEOutputs extends Component {\n\n    constructor(props) {\n        super(props);\n        // let flows = new Array(6);\n        // let demand = new Array(6);\n        // let satisfied = new Array(6);\n        // for (let i = 0; i < flows.length; i++) {\n        //   demand[i] = new Array(6);\n        //   flows[i] = new Array(6);\n        //   satisfied[i] = new Array(6);\n        //   for (let j = 0; j < 6; j++) {\n        //     flows[i][j] = \"-\";\n        //     demand[i][j] = \"-\";\n        //     satisfied[i][j] = \"-\";\n        //   }\n        // }\n\n\n        // this.state = {\n        //   flows: flows,\n        //   demand: demand,\n        //   satisfied: satisfied,\n        // }\n      let flows = new Array(Number(props.num_nodes));\n      let demand = new Array(Number(props.num_nodes));\n      let satisfied = new Array(Number(props.num_nodes));\n      for (let i = 0; i < flows.length; i++) {\n        flows[i] = new Array(Number(props.num_nodes));\n        demand[i] = new Array(Number(props.num_nodes));\n        satisfied[i] = new Array(Number(props.num_nodes));\n        for (let j = 0; j < props.num_nodes; j++) {\n          flows[i][j] = \"-\";\n          demand[i][j] = \"-\";\n          satisfied[i][j] = \"-\";\n        }\n      }\n      let offset = props.zeroindex ? 1 : 0;\n      for (let i = 0; i < props.data.flows.length; i++) {\n        let a = props.data.allocation[i].reduce((partial_sum, s) => partial_sum + s);\n        flows[props.data.flows[i][0]-offset][props.data.flows[i][1]-offset] = Math.round(a * 100) / 100;\n        demand[props.data.flows[i][0]-offset][props.data.flows[i][1]-offset] = Math.round(props.data.demand[i] * 100) / 100;\n        satisfied[props.data.flows[i][0]-offset][props.data.flows[i][1]-offset] = Math.round(a /props.data.demand[i] * 100) + \"%\";\n      };\n      this.state = {\n        ...this.state,\n        flows: flows,\n        demand: demand,\n        satisfied: satisfied,\n      }\n    }\n\n    componentWillReceiveProps(props) {\n      console.log(props)\n      let flows = new Array(Number(props.num_nodes));\n      let demand = new Array(Number(props.num_nodes));\n      let satisfied = new Array(Number(props.num_nodes));\n      for (let i = 0; i < flows.length; i++) {\n        flows[i] = new Array(Number(props.num_nodes));\n        demand[i] = new Array(Number(props.num_nodes));\n        satisfied[i] = new Array(Number(props.num_nodes));\n        for (let j = 0; j < props.num_nodes; j++) {\n          flows[i][j] = \"-\";\n          demand[i][j] = \"-\";\n          satisfied[i][j] = \"-\";\n        }\n      }\n      let offset = props.zeroindex ? 1 : 0;\n      for (let i = 0; i < props.data.flows.length; i++) {\n        let a = props.data.allocation[i].reduce((partial_sum, s) => partial_sum + s);\n        flows[props.data.flows[i][0]-offset][props.data.flows[i][1]-offset] = Math.round(a * 100) / 100;\n        demand[props.data.flows[i][0]-offset][props.data.flows[i][1]-offset] = Math.round(props.data.demand[i] * 100) / 100;\n        satisfied[props.data.flows[i][0]-offset][props.data.flows[i][1]-offset] = Math.round(a /props.data.demand[i] * 100) + \"%\";\n      };\n      this.setState({\n        ...this.state,\n        flows: flows,\n        demand: demand,\n        satisfied: satisfied,\n      })\n    }\n\n    render() {\n        let key = 0;\n        let flows = []\n        let thead = []\n        if (this.state.flows[0]) {\n          for (let i = 0; i < this.state.flows[0].length; i++) {\n            thead.push(<th className=\"border-bottom\" key={key++}>{i}</th>)\n          }\n        }\n        flows.push(<tr key={key++}><th></th>{thead}</tr>)\n\n        for (let i = 0; i < this.state.flows.length; i++) {\n          let row = this.state.flows[i]\n          let rowDOM = []\n          for (let j = 0; j < row.length; j++) {\n            rowDOM.push(<td key={key++}>{row[j]}</td>);\n          }\n          flows.push(<tr key={key++}><th className=\"border-right\">{i}</th>{rowDOM}</tr>);\n        }\n\n\n        let demand = []\n        thead = []\n        if (this.state.demand[0]) {\n          for (let i = 0; i < this.state.demand[0].length; i++) {\n            thead.push(<th className=\"border-bottom\" key={key++}>{i}</th>)\n          }\n        }\n        demand.push(<tr key={key++}><th></th>{thead}</tr>)\n\n        for (let i = 0; i < this.state.demand.length; i++) {\n          let row = this.state.demand[i]\n          let rowDOM = []\n          for (let j = 0; j < row.length; j++) {\n            rowDOM.push(<td key={key++}>{row[j]}</td>);\n          }\n          demand.push(<tr key={key++}><th className=\"border-right\">{i}</th>{rowDOM}</tr>);\n        }\n\n        let satisfied = []\n        thead = []\n        if (this.state.satisfied[0]) {\n          for (let i = 0; i < this.state.satisfied[0].length; i++) {\n            thead.push(<th className=\"border-bottom\" key={key++}>{i}</th>)\n          }\n        }\n        satisfied.push(<tr key={key++}><th></th>{thead}</tr>)\n\n        for (let i = 0; i < this.state.satisfied.length; i++) {\n          let row = this.state.satisfied[i]\n          let rowDOM = []\n          for (let j = 0; j < row.length; j++) {\n            rowDOM.push(<td key={key++}>{row[j]}</td>);\n          }\n          satisfied.push(<tr key={key++}><th className=\"border-right\">{i}</th>{rowDOM}</tr>);\n        }\n        return (\n          <div>\n            <Table>\n              <tbody>\n                {flows}\n              </tbody>\n            </Table>\n            <Table>\n              <tbody>\n                {demand}\n              </tbody>\n            </Table>\n            <Table>\n              <tbody>\n                {satisfied}\n              </tbody>\n            </Table>\n          </div>\n        );\n    }\n}\n\nexport default TEOutputs;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst StyledLogin = styled.div`\n    margin-top: 30vh;\n`;\n\nconst StyledInputs = styled.div`\n    form {\n        margin: 10px;\n        select {\n         -webkit-appearance: button;\n         -webkit-border-radius: 2px;\n         -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n         -webkit-padding-end: 20px;\n         -webkit-padding-start: 2px;\n         -webkit-user-select: none;\n         background-image: url(http://i62.tinypic.com/15xvbd5.png), -webkit-linear-gradient(#FAFAFA, #F4F4F4 40%, #E5E5E5);\n         background-position: 97% center;\n         background-repeat: no-repeat;\n         border: 1px solid #AAA;\n         color: #555;\n         font-size: inherit;\n         overflow: hidden;\n         padding: 5px 10px;\n         text-overflow: ellipsis;\n         white-space: nowrap;\n         width: 300px;\n        }\n    }\n    .input {\n      text-align: center;\n      width: 100%;\n      display: block;\n      height: 50px;\n\n      select {\n        border: none;\n      }\n\n      .input-elt {\n        font-size: 15px;\n        margin-left: 0;\n        margin-right: 0;\n        display: inline-block;\n        border-left: none;\n        border-right: 1px solid #AAA;\n        border-top: 1px solid #AAA;\n        border-bottom: 1px solid #AAA;\n        border-top-left-radius: 0px;\n        border-bottom-left-radius: 0px;\n      }\n    }\n\n    .input_label {\n      color: white;\n      display: inline-block;\n      width: 75px;\n      height: calc(100% - 34px);\n      background-color: #999;\n      vertical-align: top;\n      margin: 10px 0px;\n      padding: 6px 10px;\n      border-left: 1px solid #AAA;\n      border-top: 1px solid #AAA;\n      border-bottom: 1px solid #AAA;\n      font-size: 14px;\n    }\n\n    .input-elt {\n      position: relative;\n      display: block;\n      margin: 10px auto;\n      -webkit-appearance: button;\n      -webkit-border-radius: 2px;\n      -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n      -webkit-padding-end: 20px;\n      -webkit-padding-start: 2px;\n      -webkit-user-select: none;\n      border: 1px solid #AAA;\n      color: #555;\n      font-size: inherit;\n      overflow: hidden;\n      padding: 5px 10px;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      width: 278px;\n    }\n    .button {\n        color: white;\n        display: block;\n        width: 75px;\n        background-color: #999;\n        vertical-align: top;\n        margin: 10px auto;\n        padding: 6px 10px;\n        border-left: 1px solid #AAA;\n        border-top: 1px solid #AAA;\n        border-bottom: 1px solid #AAA;\n        font-size: 14px;\n        border-radius: 5px;\n    }\n`;\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: \"\",\n        }\n    }\n\n    handlePassword(v) {\n        this.setState({\n            password: v,\n        })\n    }\n    render() {\n        return (\n          <StyledLogin>\n            <StyledInputs id=\"login-window\">\n              <form className=\"input\">\n                {/* <div className=\"input_label\">Password</div> */}\n                <input\n                  className=\"input-elt\"\n                  type=\"password\"\n                  placeholder=\"\"\n                  onChange={e => this.handlePassword(e.target.value)}\n                />\n                <input\n                    className=\"button\"\n                    type=\"submit\"\n                    onClick={e => this.props.login(this.state.password)}\n                    value=\"Login\"\n                />\n              </form>\n\n            </StyledInputs>\n          </StyledLogin>\n        );\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport * as d3 from \"d3\";\n\nconst StyledOutputs = styled.div`\n    position: relative;\n    svg {\n        font-family: Sans-Serif, Arial;\n    }\n    .line {\n      stroke-width: 4;\n      fill: none;\n    }\n\n    .axis path {\n      stroke: black;\n    }\n\n    .text {\n      font-size: 12px;\n    }\n\n    .title-text {\n      font-size: 12px;\n    }\n\n    #all-statements {\n      display: block;\n      width: 100%;\n      border-bottom: 1px solid black;\n    }\n\n    #statement-table {\n      background-color: #EEE;\n      margin-top: 10px;\n    }\n\n    #statements {\n      width: 40%;\n      margin: 0px auto;\n      margin-bottom: 70px;\n      background-color: #EEE;\n      padding: 20px;\n      border-radius: 5px;\n      font-size: 18px;\n      text-align:center;\n\n      div {\n        margin: 20px 0px;\n      }\n      .colorGreen {\n        color: rgb(0,150,0);\n      }\n      .colorRed {\n        color: rgb(150, 0,0);\n      }\n    }\n`;\n\nconst SVG = styled.svg`\n  display: block;\n  margin: -60px auto 0px auto;\n  height: 700px;\n  width: 900px;\n`;\n\nconst AllocationTable = styled.table`\n    border: 1px solid gray;\n    background-color: rgba(255, 255, 255, .2);\n    margin: 0px auto;\n    th {\n        padding: 3px 10px;\n    }\n\n    td {\n        padding: 5px 10px;\n        text-align: center;\n    }\n\n    .selected {\n        background-color: rgba(200, 200, 200, .6);\n    }\n`;\n\nconst InfoTable = styled.table`\n    border: 1px solid gray;\n    background-color: rgba(255, 255, 255, .2);\n    margin: 10px auto;\n    margin-top: 70px;\n\n    th {\n        padding: 3px 10px;\n    }\n\n    td {\n        padding: 5px 10px;\n        text-align: center;\n    }\n\n    .selected {\n        background-color: rgba(200, 200, 200, .6);\n    }\n`;\n\nclass StockOutputs extends Component {\n    constructor(props){\n        super(props)\n        console.log(props)\n        this.state = {\n            beta: props.data.optimal_b,\n            roi: props.roi/props.budget,\n            cvar: props.data.optimal_cvar,\n            var: props.data.optimal_var,\n            a: props.data.optimal_a,\n            budget: props.budget,\n            selected: {\n              allocation: props.data.optimal_a,\n              var: props.data.optimal_var,\n              cvar: props.data.optimal_cvar,\n              gain: props.roi/props.budget,\n              name: \"test_\" + props.data.optimal_b,\n              id: -1,\n            }\n        }\n        this.drawGraph = this.drawGraph.bind(this);\n        this.selectLine = this.selectLine.bind(this);\n        this.highlightCircles = this.highlightCircles.bind(this);\n    }\n\n    componentDidMount() {\n        this.drawGraph(this.props.data)\n    }\n\n    componentWillReceiveProps(props) {\n        console.log(props);\n        this.setState({\n          // allocation: props.data.optimal_a,\n          // var: props.data.optimal_var,\n          // cvar: props.data.optimal_cvar,\n          beta: props.data.optimal_b,\n          roi: props.roi/props.budget,\n          cvar:  props.data.optimal_cvar,\n          var: props.data.optimal_var,\n          budget: props.budget,\n          a: props.data.optimal_a,\n          selected: {\n            allocation: props.data.optimal_a,\n            var: props.data.optimal_var,\n            cvar: props.data.optimal_cvar,\n            gain: props.roi/props.budget,\n            name: \"test_\" + props.data.optimal_b,\n          }\n        })\n        this.drawGraph(props.data);\n    }\n\n    selectLine(d) {\n        console.log(d)\n        this.setState({\n            selected: d,\n        }, () => {\n          this.highlightCircles();\n        })\n    }\n\n    highlightCircles() {\n        d3.selectAll(\"circle\").style(\"opacity\", .5)\n        d3.selectAll(\"circle\").attr(\"r\", 6)\n        if (this.state.selected) {\n          let circle = d3.selectAll(\"circle\").filter((c, i) => (c.id === this.state.selected.id));\n          circle.style(\"opacity\", 1);\n          circle.attr(\"r\", 8)\n        }\n\n    }\n\n    drawGraph(d) {\n    console.log(d)\n    var beta_vals = d.beta\n    var g_vals = d.gains\n    var id = 0;\n    var data = beta_vals.map((b,i) => {\n      var values = g_vals.map((g,j) => {\n        return {\n          gain: g,\n          cvar: d.cvar[i][j],\n          var: d.var[i][j],\n          allocation: d.allocation[i][j],\n          name: \"test_\" + b,\n          line_id: i,\n          point_id: j,\n          id: id++,\n        }\n      });\n      return {\n        name: \"Beta=\" + b,\n        values: values,\n        beta: b,\n        id: i,\n      }\n    });\n    var line_id = data.length\n    data.push({\n      name: \"Beta=\" + d.optimal_b,\n      beta: d.optimal_b,\n      id: id++,\n      values: [{\n          gain: this.props.roi/this.props.budget,\n          cvar: d.optimal_cvar,\n          var: d.optimal_var,\n          allocation: d.optimal_a,\n          name: \"test_\" + d.optimal_b,\n          line_id: line_id + 1,\n          point_id: -1,\n          id: -1,\n      }],\n    })\n\n    console.log(data)\n    var width = 800;\n    var height = 600;\n    var margin = 100;\n    var duration = 100;\n\n    var lineOpacity = \"0.25\";\n    var lineOpacityHover = \"0.6\";\n    var otherLinesOpacityHover = \"0.1\";\n    var lineStroke = \"4px\";\n    var lineStrokeHover = \"4px\";\n\n    var circleOpacity = '0.85';\n    var circleOpacityOnLineHover = \"0.25\"\n    var circleRadius = 6;\n    var circleRadiusHover = 8;\n\n    /* Scale */\n    var xScale = d3.scaleLinear ()\n      .domain(d3.extent(data[0].values, d => d.gain))\n      .range([0, width-margin]);\n\n    var scalesY = d.cvar\n    scalesY.push([d.optimal_cvar])\n    var yScale = d3.scaleLinear()\n      .domain([d3.min(scalesY.map(cvar => d3.min(cvar, d => d)), d => d), d3.max(scalesY.map(cvar => d3.max(cvar, d => d)), d => d)])\n      .range([height-margin, 0]);\n\n    var color = d3.scaleOrdinal(d3.schemeCategory10);\n\n    /* Add SVG */\n    var svg = d3.select(this.svg)\n      .append('g')\n      .attr(\"height\", (height + margin) + \"px\")\n      .attr(\"width\", (width + margin) + \"px\")\n      .attr(\"transform\", `translate(${margin}, ${margin})`);\n\n    svg.append(\"text\")\n      .attr(\"class\", \"title-text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"x\", (width-margin)/2)\n      .attr(\"y\", 5);\n\n    /* Add line into SVG */\n    var line = d3.line()\n      .x(d => xScale(d.gain))\n      .y(d => yScale(d.cvar));\n\n    let lines = svg.append('g')\n      .attr('class', 'lines');\n\n\n    let highlightCircles = this.highlightCircles;\n    lines.selectAll('.line-group')\n      .data(data).enter()\n      .append('g')\n      .attr('class', 'line-group')\n      .append('path')\n      .attr('class', 'line')\n      .attr('d', d => line(d.values))\n      .style('stroke', (d, i) => color(i))\n      .style('opacity', lineOpacity)\n      .on(\"mouseover\", function(d, i) {\n          d3.selectAll('.line')\n            .style('opacity', otherLinesOpacityHover);\n          d3.selectAll(\"circle\").filter((c, i) => (c.line_id === d.id))\n            .attr('opacity', 1);\n          d3.select(this)\n            .style('opacity', lineOpacityHover)\n            .style(\"stroke-width\", lineStrokeHover)\n            .style(\"cursor\", \"pointer\");\n        })\n      .on(\"mouseout\", function(d) {\n          highlightCircles();\n          d3.select(this)\n            .style('opacity', lineOpacity)\n            .style(\"stroke-width\", lineStroke)\n            .style(\"cursor\", \"pointer\");\n        });\n\n\n    /* Add circles in the line */\n    lines.selectAll(\"circle-group\")\n      .data(data).enter()\n      .append(\"g\")\n      .attr(\"id\", (d,i) => `circle-group-${i}`)\n      .attr(\"class\", \"circle-group\")\n      .style(\"fill\", (d, i) => color(i))\n      .selectAll(\"circle\")\n      .data(d => d.values).enter()\n      .append(\"g\")\n      .attr(\"class\", \"circle\")\n      .attr(\"id\", (d,i) => `circle-${i}`)\n      .on(\"click\", this.selectLine)\n      // .on(\"mouseover\", function(d) {\n      //     d3.select(this)\n      //       .style(\"cursor\", \"pointer\")\n      //       .append(\"text\")\n      //       .attr(\"class\", \"text\")\n      //       .text(`${d.cvar}`)\n      //       .attr(\"x\", d => xScale(d.gain) + 5)\n      //       .attr(\"y\", d => yScale(d.cvar) - 10);\n      //   })\n      // .on(\"mouseout\", function(d) {\n      //     d3.select(this)\n      //       .style(\"cursor\", \"none\")\n      //       .transition()\n      //       .duration(duration)\n      //       .selectAll(\".text\").remove();\n      //   })\n      .append(\"circle\")\n      .attr(\"cx\", d => xScale(d.gain))\n      .attr(\"cy\", d => yScale(d.cvar))\n      .attr(\"r\", circleRadius)\n      .style('opacity', circleOpacity)\n      .on(\"mouseover\", function(d, i) {\n          d3.selectAll(\"circle\").filter((c, i) => (c.id === d.id))\n            .attr(\"r\", circleRadiusHover);\n        })\n      .on(\"mouseout\", function(d) {\n          d3.selectAll(\"circle\").filter((c, i) => (c.id === d.id))\n            .attr(\"r\", circleRadius);\n          highlightCircles();\n      })\n\n    d3.selectAll(\".circle-group\")\n      .append(\"text\")\n      .attr(\"class\", \"text\")\n      .text(d => d.name)\n      .attr(\"x\", d => xScale(d.values[0].gain) + 20)\n      .attr(\"y\", d => yScale(d.values[0].cvar))\n\n    /* Add Axis into SVG */\n    var formatter = d3.format(\".3p\");\n    var xAxis = d3.axisBottom(xScale).ticks(5).tickFormat(formatter);\n    var yAxis = d3.axisLeft(yScale).ticks(5).tickFormat(formatter);\n\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", `translate(0, ${height-margin})`)\n      .call(xAxis)\n      .append('text')\n        .attr(\"x\", (width-margin)/2)\n        .attr(\"y\", \"45\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"fill\", \"#000\")\n        .attr(\"font-size\", \"18px\")\n        .text(\"Return on Investment (%)\");\n\n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .attr(\"dy\", \"1em\")\n      .call(yAxis)\n      .append('text')\n      .attr(\"y\", -50)\n      .attr(\"x\", -(height - margin)/2)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"fill\", \"#000\")\n      .attr(\"font-size\", \"18px\")\n      .text(\"Conditional Value at Risk (%)\");\n\n    this.highlightCircles();\n  }\n    render() {\n        let allocation_info;\n        let point_info;\n        let statement_header = []\n        let statement_weights = []\n        this.state.a.forEach((w,i) => {\n            statement_header.push(<th x=\"0\">{this.props.tickers[i]}</th>)\n            statement_weights.push(<td x=\"0\">${Math.round(w * 100 * this.state.budget)/100}</td>)\n        })\n\n        if (this.state.selected) {\n            point_info = (<tr>\n                            <td x=\"0\">{Math.round(this.state.selected.var * 100000)/1000}%</td>\n                            <td x=\"50\">{Math.round(this.state.selected.cvar * 100000)/1000}%</td>\n                            <td x=\"50\">{Math.round(this.state.selected.gain * 100000)/1000}%</td>\n                        </tr>)\n            allocation_info = this.state.selected.allocation.map((w, i) => {\n                return <tr key={i}>\n                            <td x=\"0\">{this.props.tickers[i]}</td>\n                            <td x=\"50\">{Math.round(w * 100000)/1000}%</td>\n                        </tr>\n            })\n        }\n\n        console.log(this.state)\n        return (\n          <StyledOutputs>\n            <div id=\"all-statements\">\n              <InfoTable id=\"statement-table\">\n                <tbody>\n                  <tr>\n                    {statement_header}\n                  </tr>\n                  <tr>\n                    {statement_weights}\n                  </tr>\n                </tbody>\n              </InfoTable>\n              <div id=\"statements\">\n                <div>Your gain is\n                  <span className=\"colorGreen\"> {Math.round(this.state.roi * 100 * this.state.budget)/100}$ </span>\n                  return on invesment\n                </div>\n                <div>Your loss is no less than\n                  <span className=\"colorRed\"> {Math.round(this.state.var * 100 * this.state.budget)/100}$ </span>\n                  with probability\n                  <span className=\"colorGreen\"> {Math.round(this.state.beta * 100000)/1000}% </span>\n                </div>\n                <div>In the worst\n                  <span className=\"colorGreen\"> {Math.round((1-this.state.beta) * 100000)/1000}% </span>\n                  of days, your average loss is\n                  <span className=\"colorRed\"> {Math.round(this.state.cvar * 100 * this.state.budget)/100}$</span>\n                </div>\n              </div>\n            </div>\n            <InfoTable>\n              <tbody>\n                  <tr>\n                      <th>VAR</th>\n                      <th>CVAR</th>\n                      <th>ROI</th>\n                  </tr>\n                  { point_info }\n              </tbody>\n            </InfoTable>\n            <AllocationTable>\n              <tbody>\n                  <tr>\n                      <th>Ticker</th>\n                      <th>weight</th>\n                  </tr>\n                  { allocation_info }\n              </tbody>\n            </AllocationTable>\n            <SVG\n              ref={svg => this.svg = svg}\n            >\n            </SVG>\n\n {/*<div>\n               VAR:\n               <div>\n                 {this.props.data.var}\n               </div>\n             </div>\n             <div>\n               CVAR:\n               <div>\n                 {this.props.data.cvar}\n               </div>\n             </div>\n             <div>\n               Allocation:\n               <div>\n                 {this.props.data.allocation}\n               </div>\n             </div>*/}\n          </StyledOutputs>\n        );\n    }\n}\n\nexport default StockOutputs;\n","import React, {Component} from 'react';\nimport * as d3 from \"d3\";\nimport styled from 'styled-components';\n\nconst StyledResults = styled.div`\n    height: 100%;\n    .tableTitle {\n        margin-top: 20px;\n        text-align: center;\n    }\n`;\n\nconst SVG = styled.svg`\n    width: 100%;\n    height: 100%;\n\n    .links line {\n      stroke: #888;\n      stroke-width: 6;\n    }\n\n    .nodes circle {\n      pointer-events: all;\n      stroke: none;\n      stroke-width: 15px;\n      cursor: pointer;\n    }\n\n    #limitButton {\n        padding: 5px 10px;\n        border: 1px solid #AAA;\n        width: 100px;\n        text-align: center;\n        cursor: pointer;\n        background-color: #DEDEDE;\n        pointer-events: auto;\n        position: absolute;\n        bottom: 7px;\n        left: 7px;\n    }\n\n    #utilizationButton {\n        position: absolute;\n        padding: 5px 10px;\n        border: 1px solid #AAA;\n        width: 100px;\n        text-align: center;\n        cursor: pointer;\n        background-color: #DEDEDE;\n        pointer-events: auto;\n        bottom: 7px;\n        right: 7px;\n    }\n\n    select {\n        position: absolute;\n        top: 7px;\n        left: 7px;\n        -webkit-appearance: button;\n        -webkit-border-radius: 2px;\n        -webkit-box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\n        -webkit-padding-end: 20px;\n        -webkit-padding-start: 2px;\n        -webkit-user-select: none;\n        background-image: url(http://i62.tinypic.com/15xvbd5.png), -webkit-linear-gradient(#FAFAFA, #F4F4F4 40%, #E5E5E5);\n        background-position: 97% center;\n        background-repeat: no-repeat;\n        border: 1px solid #AAA;\n        color: #555;\n        overflow: hidden;\n        padding: 5px 35px 5px 10px;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        pointer-events: auto;\n    }\n`\n\nconst ScenarioTable = styled.table`\n    border: 1px solid steelblue;\n    background-color: rgba(255, 255, 255, .2);\n    float: left;\n    pointer-events: auto;\n\n    th {\n        padding: 3px 10px;\n    }\n\n    tr {\n        cursor: pointer;\n    }\n\n    td {\n        padding: 5px 10px;\n        text-align: center;\n    }\n\n    .table-scroll {\n        height: 200px;\n        overflow: scroll;\n    }\n\n    .selected {\n        background-color: rgba(200, 200, 200, .6);\n    }\n`;\n\nconst PathTable = styled.table`\n    border: 1px solid steelblue;\n    background-color: rgba(255, 255, 255, .2);\n    float: right;\n    pointer-events: auto;\n\n    th {\n        padding: 3px 10px;\n    }\n\n    tr {\n        cursor: pointer;\n    }\n\n    td {\n        padding: 5px 10px;\n        text-align: center;\n    }\n\n    .selected {\n        background-color: rgba(200, 200, 200, .6);\n    }\n`;\n\nconst OuterTable = styled.table`\n    font-size: 14px;\n    color: white;\n    background-color: #444;\n    border-radius: 10px;\n    margin: 30px auto;\n\n    tr {\n        border: 1px solid gray;\n    td {\n        padding: 10px;\n    }\n    .border-bottom {\n        border-bottom: 1px solid white;\n        padding: 6px 0px;\n    }\n    .border-right {\n        border-right: 1px solid white;\n        padding: 0px 6px;\n    }\n`;\n\nlet colors = [\"#1abc9c\", \"#3498db\", \"#9b59b6\", \"#34495e\", \"#e67e22\", \"#f1c40f\"];\nlet dashes = [\"5,5\", \"10,10\", \"20, 20\", \"20,10,5,5,5,10\", \"10,10,5,10\"]\n\nclass ForceGraph extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            simulation: \"\",\n            numSelected: 0,\n            firstSelected: null,\n            secondSelected: null,\n            nodeSize: 9,\n            edgeLength: 100,\n            flows: [],\n            allocation: [],\n            showPaths: false,\n            showUtilization: 0,\n            edgesByTunnel: [],\n            nodesByTunnel: [],\n            tunnelIndex: 0,\n            scenario: 0,\n            downLinks: [],\n            dashLinks: [],\n            colorNodes: [],\n            secondaryNodes: [],\n            secondaryTunnels: [],\n            scenarios: [],\n            capacity: [],\n            failure_probabilities: [],\n            linkUtilization: [],\n            flowid: null,\n            backFlowid: null,\n            tips: [],\n            graph: null,\n            num_nodes: 0,\n            limitTraffic: true,\n        }\n        this.click = this.click.bind(this);\n        this.arrowPress = this.arrowPress.bind(this);\n        this.dragstarted = this.dragstarted.bind(this);\n        this.dragged = this.dragged.bind(this);\n        this.dragended = this.dragended.bind(this);\n        this.changeTunnel = this.changeTunnel.bind(this);\n        this.showUtilization = this.showUtilization.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.drawGraph(this.props.topology)\n    }\n\n    componentWillReceiveProps(props) {\n        this.clearGraph();\n        this.drawGraph(props.topology);\n        this.setState({\n            num_nodes: props.num_nodes,\n            f: props.flows,\n            T: props.T,\n            Tf: props.Tf,\n            links: props.links,\n            allocation: props.allocation,\n            demand: props.demand,\n            probabilities: props.probabilities,\n            scenarios: props.scenarios,\n            scenario: 0,\n            showUtilization: 0,\n            capacity: props.capacity,\n            failure_probabilities: props.failure_probabilities,\n            flowid: null,\n            downLinks: [],\n            X: props.X,\n            var: props.var,\n            cvar: props.cvar,\n            limitTraffic: true,\n            linkUtilization: [],\n        }, () => {\n            this.simulateTraffic();\n            // let flows = {}\n            // props.flows.forEach((nodes, flowid) => {\n            //     let tunnels = this.getTunnels(flowid, nodes[0], nodes[1]);\n            //     flows[flowid] = {\n            //         id: flowid,\n            //         src: nodes[0].toString(),\n            //         dst: nodes[1].toString(),\n            //         tunnels: tunnels,\n            //         demand: props.demand[flowid],\n            //         permissable: 1 - props.var,\n            //     };\n            // })\n            // let satisfiedDemand = [];\n            // if (props.scenarios) {\n            //     let totalDemand = props.demand.reduce((i, j) => i + j);\n            //     props.scenarios.forEach((scenario, s) => {\n            //         let sentTraffic = this.state.graph ? new Array(this.state.graph.links.length).fill(0) : [];\n            //         let satisfied = 0;\n            //         Object.values(flows).forEach((flow, f) => {\n            //             let total_weight = 0;\n            //             let numAvailable = 0;\n            //             flow.tunnels.forEach((tunnel, t) => {\n            //                 total_weight += props.X[s][tunnel.id] === 1 ? this.state.allocation[f][t] : 0;\n            //                 numAvailable += props.X[s][tunnel.id] === 1 ? 1 : 0;\n            //             });\n            //             flow.tunnels.forEach((tunnel, t) => {\n            //                 let weight = 0\n            //                 if (props.X[s][tunnel.id] === 1) {\n            //                     weight = total_weight !== 0 ?\n            //                             (this.state.allocation[f][t] / total_weight)  :\n            //                             (1 / numAvailable);\n            //                 } else {\n            //                     weight = 0;\n            //                 }\n            //                 let congested = false;\n            //                 tunnel.links.forEach(link => {\n            //                     // let ls = this.state.graph.links.filter((l, index) => index === link.index);\n            //                     if (sentTraffic[link.index] >= this.state.capacity[link.index]) {\n            //                         congested = true;\n            //                     }\n            //                 })\n            //                 if (!congested) {\n            //                     tunnel.links.forEach(link => {\n            //                         sentTraffic[link.index] += weight * flow.demand * flow.permissable\n            //                     });\n            //                     satisfied += weight * flow.demand * flow.permissable\n            //                 }\n            //             })\n            //         })\n            //         satisfiedDemand.push(satisfied / totalDemand)\n            //     });\n            // };\n            // this.setState({\n            //     flows,\n            //     scenarioSatisfaction: satisfiedDemand,\n            // }, this.updateGraph)\n        });\n    }\n\n    componentDidUpdate(state) {\n        // this.drawGraph()\n    }\n\n    simulateTraffic() {\n        console.log(this.state);\n        let flows = {}\n        this.state.f.forEach((nodes, flowid) => {\n            flows[flowid] = {\n                id: flowid,\n                src: nodes[0].toString(),\n                dst: nodes[1].toString(),\n                demand: this.state.demand[flowid],\n                permissable: this.state.limitTraffic ? 1 - this.state.var : 1,\n            };\n        })\n        let scenarioSatisfaction = [];\n        let linkUtilization = new Array(this.state.capacity.length).fill(0);\n        if (this.state.scenarios) {\n            let totalDemand = this.state.demand.reduce((i, j) => i + j);\n            this.state.scenarios.forEach((scenario, s) => {\n                let scenarioSentTraffic = this.state.graph ? new Array(this.state.graph.links.length).fill(0) : [];\n                let satisfiedDemandForScenario = 0;\n                Object.values(flows).forEach((flow, f) => {\n                    let satisfiedDemandForFlow = 0;\n                    let flowTunnels = this.getTunnels(flow.id, flow.src, flow.dst, s);\n                    flowTunnels.forEach((tunnel, t) => {\n                        let weight = tunnel.weight;\n                        let sent = weight * flow.demand * flow.permissable;\n\n                        let congested = false;\n                        let minSpace = Math.max(...this.state.capacity);\n                        tunnel.links.forEach(link => {\n                            minSpace = Math.min(minSpace, this.state.capacity[link.index] - scenarioSentTraffic[link.index])\n                            if (scenarioSentTraffic[link.index] + sent > this.state.capacity[link.index]) {\n                                congested = true;\n                            }\n                        })\n\n                        if (!congested) {\n                            tunnel.links.forEach(link => {\n                                scenarioSentTraffic[link.index] += sent;\n                                if (s === this.state.scenario) {\n                                    linkUtilization[link.index] += sent;\n                                }\n                            });\n                            if (s === this.state.scenario) {\n                                tunnel.sent = sent;\n                                satisfiedDemandForFlow += sent;\n                            }\n                            satisfiedDemandForScenario += sent;\n                        } else if (minSpace > 0){\n                            sent = minSpace;\n                            tunnel.links.forEach(link => {\n                                scenarioSentTraffic[link.index] += sent;\n                                if (s === this.state.scenario) {\n                                    linkUtilization[link.index] += weight * flow.demand * flow.permissable;\n                                    // TODO \n                                    // linkUtilization[link.index] += sent;\n                                }\n                            });\n                            if (s === this.state.scenario) {\n                                tunnel.sent = sent;\n                                satisfiedDemandForFlow += sent;\n                            }\n                            satisfiedDemandForScenario += sent;\n                        }\n                    })\n                    if (s === this.state.scenario) {\n                        flow.satisfied = satisfiedDemandForFlow;\n                        flow.tunnels = flowTunnels;\n                    }\n                })\n                scenarioSatisfaction.push(satisfiedDemandForScenario / totalDemand)\n            });\n        };\n        this.setState({\n            flows,\n            scenarioSatisfaction,\n            linkUtilization,\n        }, () => {\n            this.updateGraph();\n            this.changeTunnel(0);\n        });\n    }\n\n    // simulateScenario(s) {\n    //     return flows, satifiedDemand, \n    // }\n\n    dragstarted(d) {\n      if (!d3.event.active) this.state.simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    dragged(d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    }\n\n    dragended(d) {\n      if (!d3.event.active) this.state.simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    handleUtilization(opacity) {\n        this.setState({\n            showUtilization: opacity,\n        }, this.updateGraph)\n    }\n    \n    handleScenario(scenario) {\n        let downLinks = [];\n        this.simulateTraffic();\n        this.state.scenarios[scenario].forEach((s, i) => {\n            if (!s) {\n                downLinks.push({src: String(this.state.links[i][0]), dst: String(this.state.links[i][1])});\n            }\n        });\n        this.setState({\n            downLinks: downLinks,\n            scenario: scenario,\n        }, () => {\n            this.simulateTraffic();\n        });\n    }\n\n    handleLimit(bool) {\n        this.setState({\n            limitTraffic: bool,\n        }, () => {\n            this.simulateTraffic();\n        });\n    }\n\n    colorLinks(links, color){\n        let forwardLinks = d3.selectAll('line').filter((d) => {\n            let filter = false;\n            links.forEach(link => {\n                if (link.src === d.source.id && link.dst === d.target.id) { filter = true }\n            })\n            return filter;\n        })\n        let backLinks = d3.selectAll('line').filter((d) => {\n            let filter = false;\n            links.forEach(link => {\n                if (link.dst === d.source.id && link.src === d.target.id) { filter = true }\n            })\n            return filter;\n        })\n        forwardLinks.style(\"stroke-opacity\", .6);\n        forwardLinks.style(\"stroke\", color);\n        backLinks.style(\"stroke-opacity\", 0);\n        backLinks.style(\"stroke\", color);\n    }\n\n    colorNodes(nodes, color){\n        let colorNodes = d3.selectAll('circle').filter(function(d) {return (nodes.includes(d.id))})\n        colorNodes.style(\"fill\", color);\n    }\n\n    dashLinks(links, dash, animate){\n        // clearInterval(this.dashInterval);\n        let forwardLinks = d3.selectAll('line').filter((d) => {\n            let filter = false;\n            links.forEach(link => {\n                if (link.src === d.source.id && link.dst === d.target.id) { filter = true }\n            })\n            return filter;\n        })\n        let backLinks = d3.selectAll('line').filter((d) => {\n            let filter = false;\n            links.forEach(link => {\n                if (link.dst === d.source.id && link.src === d.target.id) { filter = true }\n            })\n            return filter;\n        })\n        forwardLinks.style(\"stroke-opacity\", 1);\n        forwardLinks.style(\"stroke-dasharray\", dash);\n        // var offset = 1;\n        // if (animate) {\n        //     this.dashInterval = setInterval(function() {\n        //         forwardLinks.style('stroke-dashoffset', offset);\n        //         offset -= 1; \n        //     }, 50);\n        // }\n        // backLinks.style(\"stroke-opacity\", 0);\n        // backLinks.style(\"stroke-dasharray\", dash);\n        forwardLinks.attr('marker-end','url(#arrowhead)')\n    }\n\n    animateLinks(links){\n        clearInterval(this.dashInterval);\n        let forwardLinks = d3.selectAll('line').filter((d) => {\n            let filter = false;\n            links.forEach(link => {\n                if (link.src === d.source.id && link.dst === d.target.id) { filter = true }\n            })\n            return filter;\n        })\n        let backLinks = d3.selectAll('line').filter((d) => {\n            let filter = false;\n            links.forEach(link => {\n                if (link.dst === d.source.id && link.src === d.target.id) { filter = true }\n            })\n            return filter;\n        })\n        forwardLinks.style(\"stroke-opacity\", 1);\n        var offset = 1;\n        this.dashInterval = setInterval(function() {\n            forwardLinks.style('stroke-dashoffset', offset);\n            offset -= 1; \n        }, 50);\n        backLinks.style(\"stroke-opacity\", 0);\n        forwardLinks.attr('marker-end','url(#arrowhead)')\n    }\n\n    getTunnelNodes(tunnel) {\n        let nodes = []\n        tunnel.links.forEach(link => {\n            if (!nodes.includes(link.src)) { nodes.push(link.src) };\n            if (!nodes.includes(link.dst)) { nodes.push(link.dst) };\n        })\n        return nodes;\n    }\n\n\n    getFlow(node1, node2) {\n        let ret = null\n        Object.values(this.state.flows).forEach(flow => {\n            if (flow.src === node1 && flow.dst === node2) {\n                ret = flow\n            }\n        });\n        return ret\n    }\n\n    getTunnels(f, node1, node2, s) {\n        let allTunnels = []\n        let tunnels = this.state.Tf[f];\n        let total_weight = 0;\n        let numAvailable = 0;\n        tunnels.forEach((tunnel, t) => {\n            total_weight += this.state.X[s][tunnel - 1] === 1 ? this.state.allocation[f][t] : 0;\n            numAvailable += this.state.X[s][tunnel - 1] === 1 ? 1 : 0;\n        });\n\n        tunnels.forEach((tunnel, t) => {\n            let availability = 0;\n            this.state.probabilities.forEach((prob, s) => {\n                availability += prob * this.state.X[s][tunnel - 1];\n            })\n            let weight = 0\n            if (this.state.X[s][tunnel - 1] === 1) {\n                weight = total_weight !== 0 ?\n                        (this.state.allocation[f][t] / total_weight)  :\n                        (1 / numAvailable);\n            } else {\n                weight = 0;\n            }\n            let edges_used = this.state.T[tunnel - 1]\n            let links = [];\n            edges_used.forEach(edge => {\n                links.push({\n                    \"src\": this.state.links[edge-1][0].toString(),\n                    \"dst\": this.state.links[edge-1][1].toString(),\n                    \"index\": edge - 1,\n                });\n            });\n            if (weight > 0) {\n                allTunnels.push({\n                    links,\n                    \"allocation\": this.state.allocation[f][t],\n                    \"weight\": weight,\n                    \"availability\": Math.round(availability * 1000000) / 1000000,\n                    \"id\": (tunnel - 1),\n                })\n            }\n        })\n        return allTunnels\n    }\n\n    getBackLink(link) {\n        let backindex = -1;\n        this.state.links.forEach((l, i) => {\n            if (l[0] === link[1] && l[1] === link[0]) { backindex = i }\n        });\n        return backindex != -1 ? {src: String(this.state.links[backindex][0]), dst: String(this.state.links[backindex][1])} : {};\n    }\n\n    addTip(id, line1, line2) {\n        let circle = d3.selectAll(\"circle\").filter(function (c, i) { return (c.id === id);});\n        let g = circle.select(function() { return this.parentNode; })\n        let tip = g.append(\"g\")\n          .attr(\"class\", \"tip\")\n          .attr(\"transform\", \"translate(\" + 6  + \",\" + 6 + \")\");\n\n        var rect = tip.append(\"rect\")\n          .style(\"fill\", \"white\")\n          .style(\"stroke\", \"steelblue\")\n          .style(\"opacity\", .8)\n\n        tip.append(\"text\")\n          .text(line1)\n          .attr(\"dy\", \"1.2em\")\n          .attr(\"x\", 8);\n\n        tip.append(\"text\")\n          .text(line2)\n          .attr(\"dy\", \"2.4em\")\n          .attr(\"x\", 8);\n\n        let bbox = tip.node().getBBox();\n        rect.attr(\"width\", bbox.width + 15)\n            .attr(\"height\", bbox.height + 10)\n    }\n\n    updateGraph() {\n        d3.selectAll('.tip').remove();\n        d3.selectAll('line').each(function(d) {d3.select(this).style(\"stroke-opacity\", .1)});\n        d3.selectAll('line').each(function(d) {d3.select(this).style(\"stroke-dasharray\", \"\")});\n        d3.selectAll('line').each(function(d) {d3.select(this).style(\"stroke\", \"#888\")});\n        d3.selectAll('line').attr('marker-end','');\n        d3.selectAll('circle').each(function(d) {d3.select(this).style(\"fill\", \"lightgrey\")});\n        \n        this.state.secondaryTunnels.forEach((tunnel, i) => {\n            this.dashLinks(tunnel, \"5,5\", false);\n            this.colorLinks(tunnel, colors[i]);\n        })\n        // this.dashLinks(this.state.dashLinks, \"5,5\", true);\n        this.animateLinks(this.state.dashLinks);\n        this.colorNodes(this.state.secondaryNodes, \"#bbb\");\n        this.colorNodes(this.state.colorNodes, \"#aaa\");\n\n        d3.selectAll(\"circle\").filter((c, i) => (c.id === this.state.firstSelected || c.id === this.state.secondSelected)).style(\"fill\", \"steelblue\");\n        this.state.tips.forEach(tip => {\n            this.addTip(tip.id, tip.line1, tip.line2);\n        })\n\n        if (this.state.firstSelected === null) {\n            this.resetColors();\n        }\n        this.colorLinks(this.state.downLinks, \"red\");\n        this.showUtilization(this.state.showUtilization);\n    }\n\n    resetColors() {\n        d3.selectAll('line').each(function(d) {d3.select(this).style(\"stroke-opacity\", 1)});\n        d3.selectAll('line').each(function(d) {d3.select(this).style(\"stroke-dasharray\", \"\")});\n        d3.selectAll('line').each(function(d) {d3.select(this).style(\"stroke\", \"#888\")});\n        d3.selectAll('line').attr('marker-end','');\n        d3.selectAll('circle').each(function(d) {d3.select(this).style(\"fill\", \"black\")});\n    }\n\n    clearGraph() {\n        d3.selectAll(\"svg > .tip\").remove();\n        d3.selectAll(\"svg > .links\").remove();\n        d3.selectAll(\"svg > .nodes\").remove();\n        this.setState({\n            showPaths: false,\n            firstSelected: null,\n            secondSelected: null,\n            numSelected: 0,\n            tips: [],\n        }, () => {console.log(this.state)})\n    }\n\n    arrowPress(e) {\n        // this.showUtilization();\n        if (e.keyCode === 39 && this.state.flows[this.state.flowid]) {\n            let tunnelIndex = (this.state.tunnelIndex + 1 >= this.state.flows[this.state.flowid].tunnels.length) ? 0 : this.state.tunnelIndex + 1;\n            this.changeTunnel(tunnelIndex);\n        } else if (e.keyCode === 37 && this.state.flows[this.state.flowid]) {\n            let tunnelIndex = (this.state.tunnelIndex - 1 < 0) ? this.state.flows[this.state.flowid].tunnels.length - 1 : this.state.tunnelIndex - 1;\n            this.changeTunnel(tunnelIndex);\n        } else if (e.keyCode === 38 && this.state.scenarios.length > 0) {\n            e.preventDefault();\n            this.handleScenario(this.state.scenario - 1 < 0 ? this.state.scenarios.length - 1 : this.state.scenario - 1);\n        } else if (e.keyCode === 40 && this.state.scenarios.length > 0) {\n            e.preventDefault();\n            this.handleScenario(this.state.scenario + 1 < this.state.scenarios.length ? this.state.scenario + 1 : 0);\n        };\n\n    }\n\n    showUtilization(opacity) {\n        let linkTraffic = this.state.linkUtilization;\n        for (let i = 0; i <= linkTraffic.length - 1; i++) {\n            let linklabel = d3.selectAll(\".aEnd\").filter(function (c, j) { return (j === i)});\n            linklabel.html(`${Math.round((linkTraffic[i] / this.state.capacity[i]) * 100) / 1}%`);\n            if (linkTraffic[i] / this.state.capacity[i] > 1) {\n                linklabel.style(\"fill\", \"red\")\n            } else {\n                linklabel.style(\"fill\", \"black\")\n            }\n        }\n        d3.selectAll(\".aEnd\").style(\"opacity\", opacity);\n    }\n\n    changeTunnel(tunnelIndex) {\n        let flowid = this.state.flowid;\n        let flow = this.state.flows[flowid];\n        let sent = flowid !== null ? (flow.tunnels[tunnelIndex].sent) : 0;\n        let tunnels = flowid !== null ? flow.tunnels : [];\n        let dashLinks = flowid !== null ? tunnels[tunnelIndex].links : [];\n        let colorNodes = flowid !== null ? this.getTunnelNodes(tunnels[tunnelIndex]) : [];\n        let secondaryNodes = []\n        let secondaryTunnels = []\n        if (flowid !== null) {\n            flow.tunnels.forEach(tunnel => {\n                secondaryNodes = [...secondaryNodes, ...this.getTunnelNodes(tunnel)];\n                secondaryTunnels = [...secondaryTunnels, tunnel.links];\n            });\n        };\n        let backFlowid = this.state.backFlowid;\n        let backFlow = this.state.flows[backFlowid]\n        // let sentBack = backFlowid !== null ? (backFlow.tunnels[tunnelIndex].weight * backFlow.demand) : 0;\n        let tips = []\n        if (this.state.numSelected == 2) {\n            if (this.state.firstSelected != null) {\n                tips.push({\n                    id: this.state.firstSelected,\n                    line1: `Node: ${this.state.firstSelected}`,\n                    line2: `Sent: ${sent}`\n                });\n            }\n            if (this.state.secondSelected != null) {\n                tips.push({\n                    id: this.state.secondSelected,\n                    line1: `Node: ${this.state.secondSelected}`,\n                    line2: `Received: ${sent}`,\n                });\n            }\n        } else if (this.state.numSelected == 1) {\n            let [demandedTo, demandedFrom] = this.getNodeDemand(this.state.firstSelected);\n            demandedTo = this.state.limitTraffic ? (1 - this.state.var) * demandedTo : demandedTo;\n            demandedFrom = this.state.limitTraffic ? (1 - this.state.var) * demandedFrom : demandedFrom;\n            tips.push({\n                id: this.state.firstSelected,\n                line1: `Sent: ${demandedFrom}`,\n                line2: `Received ${demandedTo}`,\n            })\n        }\n       \n        this.setState({\n            tunnelIndex,\n            dashLinks,\n            colorNodes,\n            secondaryTunnels,\n            secondaryNodes,\n            tips,\n        }, this.updateGraph);\n    }\n\n    getNodeDemand(id) {\n        let demandedFrom = 0;\n        let demandedTo = 0;\n        Object.values(this.state.flows).forEach(flow => {\n            if (id === flow.src) { demandedFrom += this.state.demand[flow.id] }\n            if (id === flow.dst) { demandedTo += this.state.demand[flow.id] }\n        });\n        return [demandedTo, demandedFrom]\n    }\n\n\n    click(d) {\n      if (this.state.numSelected === 0 || this.state.numSelected === 2) {\n        // document.removeEventListener(\"keydown\", this.arrowPress, false);\n        let [demandedTo, demandedFrom] = this.getNodeDemand(d.id);\n        let permissable = this.state.limitTraffic ? 1 - this.state.var : 1;\n        this.setState({\n            numSelected: 1,\n            firstSelected: d.id,\n            secondSelected: null,\n            showPaths: false,\n            dashLinks: [],\n            colorNodes: [],\n            secondaryTunnels: [],\n            secondaryTunnels: [],\n            flowid: null,\n            tips: [\n                {\n                    id: d.id,\n                    line1: `Sent: ${demandedFrom * permissable}`,\n                    line2: `Received ${demandedTo * permissable}`,\n                }\n            ],\n        }, this.updateGraph);\n      } else if (this.state.numSelected === 1) {\n        if (this.state.firstSelected === d.id) {\n            this.setState({\n                numSelected: 0,\n                firstSelected: null,\n                secondSelected: null,\n                tips: [],\n                showPaths: false,\n                colorNodes: [],\n                dashLinks: [],\n            }, this.updateGraph);\n        } else {\n            let flow = this.getFlow(this.state.firstSelected, d.id);\n            let backFlow = this.getFlow(d.id, this.state.firstSelected);\n            this.setState({\n                numSelected: 2,\n                secondSelected: d.id,\n                showPaths: true,\n                flowid: flow ? flow.id : null,\n                backFlowid: backFlow ? backFlow.id : null,\n            }, () => { this.changeTunnel(0) })\n        }\n      }\n    }\n\n    drawGraph(topology) {\n        document.addEventListener(\"keydown\", this.arrowPress, false);\n        var simulation = d3.forceSimulation()\n            .force(\"link\", d3\n                .forceLink().id(function(d) { return d.id; })\n                .distance(function (d) {\n                    return 100;\n                })\n            )\n            .force(\"charge\", d3.forceManyBody().strength(-500))\n            .force(\"center\", d3.forceCenter(this.svg.getBoundingClientRect().width / 2, this.svg.getBoundingClientRect().height / 2));\n\n\n        this.setState({\n            simulation: simulation,\n        }, () => {\n            const svg = d3.select(this.svg);\n            svg.append('defs').append('marker')\n                .attr('id', 'arrowhead')\n                .attr('viewBox', '-0 -5 10 10')\n                .attr('refX', 13)\n                .attr('refY', 0)\n                .attr('orient', 'auto')\n                .attr('markerWidth', 3)\n                .attr('markerHeight', 13)\n                .attr('xoverflow', 'visible')\n                .append('svg:path')\n                .attr('d', 'M 0,-5 L 10 ,0 L 0,5')\n                .attr('fill', '#999')\n                .style('stroke','none');\n\n            d3.json(`./data/${topology}.json`)\n              .then((graph, error) => {\n              if (error) throw error;\n              this.setState({\n                ...this.state,\n                graph: graph,\n              })\n\n              graph.links.forEach((link, i) => {\n                  link.capacity = this.state.capacity[i]\n              })\n              var linkg = svg.append(\"g\")\n                .attr(\"class\", \"links\")\n                .selectAll(\"line\")\n                .data(graph.links)\n                .enter()\n                .append(\"g\")\n                .attr(\"class\", \"link\")\n\n\n              var link = linkg\n                .append(\"line\")\n                .attr(\"class\", \"link-line\")\n\n              var labelLine = svg.selectAll(\".link\")\n                .append(\"text\")\n                .attr('class', 'aEnd')\n                .data(graph.links)\n                .attr('x', function(d) { return d.source.x; })\n                .attr('y', function(d) { return d.source.y; })\n                .attr('text-anchor', 'middle')\n                .style(\"font-size\", \"10px\")\n                .style(\"opacity\", 0)\n                .text(\"yo\");\n\n              var div = d3.select(\"body\").append(\"div\")\n                .attr(\"class\", \"tooltip\")\n                .style(\"opacity\", 0);\n\n            // var edgepaths = svg.selectAll(\".edgepath\")\n            //     .data(graph.links)\n            //     .enter()\n            //     .append('path')\n            //     .attrs({'d': function(d) {return 'M '+d.source.x+' '+d.source.y+' L '+ d.target.x +' '+d.target.y},\n            //            'class':'edgepath',\n            //            'fill-opacity':0,\n            //            'stroke-opacity':0,\n            //            'fill':'blue',\n            //            'stroke':'red',\n            //            'id':function(d,i) {return 'edgepath'+i}})\n            //     .style(\"pointer-events\", \"none\");\n\n            // var edgelabels = svg.selectAll(\".edgelabel\")\n            //     .data(graph.links)\n            //     .enter()\n            //     .append('text')\n            //     .style(\"pointer-events\", \"none\")\n            //     .attrs({'class':'edgelabel',\n            //            'id':function(d,i){return 'edgelabel'+i},\n            //            'dx':80,\n            //            'dy':0,\n            //            'font-size':10,\n            //            'fill':'#aaa'});\n\n            // edgelabels.append('textPath')\n            //     .attr('xlink:href',function(d,i) {return '#edgepath'+i})\n            //     .style(\"pointer-events\", \"none\")\n            //     .text(function(d,i){return 'label '+i});\n\n              var node = svg.append(\"g\")\n                .attr(\"class\", \"nodes\")\n                .selectAll(\"circle\")\n                .data(graph.nodes)\n                .enter()\n                .append('g').attr(\"class\", \"wrapper\")\n                  .attr(\"width\", 10)\n                  .attr(\"height\", 10)\n                  .on(\"click\", this.click)\n                  .call(d3.drag()\n                      .on(\"start\", this.dragstarted)\n                      .on(\"drag\", this.dragged)\n                      .on(\"end\", this.dragended));\n\n              var circle = node.append(\"circle\")\n                  .attr(\"r\", 14)\n\n              node.append(\"text\")\n                .text(function (d) { return d.id; })\n                .style(\"text-anchor\", \"middle\")\n                .style(\"fill\", \"#999\")\n                .style(\"cursor\", \"pointer\")\n                .style(\"font-size\", 18)\n                .attr(\"transform\", function(d) {\n                  return \"translate(\" + 0 + \",\" + 6+ \")\"\n                });\n\n              node.append(\"title\")\n                  .text(function(d) { return d.id; });\n\n              //add tooltip\n              let that = this;\n              svg.selectAll(\"line\")\n                  .on(\"mouseover\", function(d) {\n                      div.transition()\n                          .duration(200)\n                          .style(\"opacity\", .9);\n                      div.html(\"<i>p</i> = \" + Math.round(that.state.failure_probabilities[d.index]*10000000)/100000 + \"&#37;\") //+ \"<br/>\"  + d.close\n                          .style(\"width\", \"90px\")\n                          .style(\"left\", (d3.event.pageX) + \"px\")\n                          .style(\"top\", (d3.event.pageY - 28) + \"px\");\n                      })\n                  .on(\"mouseout\", function(d) {\n                      div.transition()\n                          .duration(200)\n                          .style(\"opacity\", 0);\n                      });\n\n              this.state.simulation\n                  .nodes(graph.nodes)\n                  .on(\"tick\", ticked)\n\n              this.state.simulation.force(\"link\")\n                  .links(graph.links);\n\n              function xpos(s, t) {\n                  var angle = Math.atan2(t.y - s.y, t.x - s.x);\n                  return 30 * Math.cos(angle) + s.x;\n              };\n\n              function ypos(s, t) {\n                  var angle = Math.atan2(t.y - s.y, t.x - s.x);\n                  return 30 * Math.sin(angle) + s.y;\n              };\n\n\n              function ticked() {\n                link\n                    .attr(\"x1\", function(d) { return d.source.x; })\n                    .attr(\"y1\", function(d) { return d.source.y; })\n                    .attr(\"x2\", function(d) { return d.target.x; })\n                    .attr(\"y2\", function(d) { return d.target.y; });\n\n                svg.selectAll('text.aEnd')\n                    .attr('x', function(d) { return xpos(d.source, d.target); })\n                    .attr('y', function(d) { return ypos(d.source, d.target); });\n\n                svg.selectAll('text.zEnd')\n                    .attr('x', function(d) { return xpos(d.target, d.source); })\n                    .attr('y', function(d) { return ypos(d.target, d.source); });\n\n                // labelLine.attr('transform',function(d,i){\n                //     if (d.target.x<d.source.x){\n                //         let bbox = this.getBBox();\n                //         let rx = bbox.x+bbox.width/2;\n                //         let ry = bbox.y+bbox.height/2;\n                //         return 'rotate(180 '+ rx+' '+ ry+')';\n                //         }\n                //     else {\n                //         return 'rotate(0)';\n                //         }\n                // });\n\n                // edgepaths.attr('d', function(d) { var path='M '+d.source.x+' '+d.source.y+' L '+ d.target.x +' '+d.target.y;\n                //                                    //console.log(d)\n                //                                    return path});\n\n                // edgelabels.attr('transform',function(d,i){\n                //     if (d.target.x<d.source.x){\n                //         let bbox = this.getBBox();\n                //         let rx = bbox.x+bbox.width/2;\n                //         let ry = bbox.y+bbox.height/2;\n                //         return 'rotate(180 '+rx+' '+ry+')';\n                //         }\n                //     else {\n                //         return 'rotate(0)';\n                //         }\n                // });\n\n                node.attr(\"transform\", function(d) {\n                  return \"translate(\" + d.x + \",\" + d.y + \")\"\n                });\n              }\n            });\n        })\n    }\n\n  render() {\n    // let links = [];\n    // if (this.state.graph) {\n    //     links = this.state.graph.links.map(link => {\n    //         return <line className=\"link\" x=\"100\" y=\"100\"/>\n    //     })\n    //     console.log(d3.select(\"line\"))\n    // }\n    let path_info;\n    if (this.state.flowid != null) {\n        path_info = this.state.flows[this.state.flowid].tunnels.map((tunnel, i) => {\n            return tunnel.weight > 0 ? <tr\n                        className={i === this.state.tunnelIndex ? \"selected\" : \"\"}\n                        onClick={() => this.changeTunnel(i)}\n                        key={i}\n                    >\n                        <td x=\"0\">Tunnel {i}</td>\n                        <td x=\"50\">{tunnel.weight}</td>\n                        <td x=\"80\">{tunnel.availability}</td>\n                    </tr> : <tr></tr>\n        });\n    }\n\n    let limitButton = this.state.limitTraffic ?\n                            <div id=\"limitButton\" onClick={() => this.handleLimit(false)}>Unlimit</div> :\n                            <div id=\"limitButton\" onClick={() => this.handleLimit(true)}>Limit</div>\n\n    let utilizationButton = this.state.showUtilization === 0 ?\n                            <div id=\"utilizationButton\" onClick={() => this.handleUtilization(.6)}>Utilization</div> :\n                            <div id=\"utilizationButton\" onClick={() => this.handleUtilization(0)}>Off</div>\n\n    let key = 0;\n    let demand = [];\n    let sentDemand = [];\n    let satisfied = [];\n    let thead = [];\n    let demandRows = [];\n    let sentRows = [];\n    let satisfiedRows = [];\n    let totalSatisfied = 0;\n    let totalDemand = 0;\n\n    for (let i = 1; i <= parseInt(this.state.num_nodes); i++) {\n        thead.push(<th className=\"border-bottom\" key={key++}>{i}</th>)\n        let demandRow = [];\n        let sentRow = [];\n        let satisfiedRow = [];\n        for (let j = 1; j <= parseInt(this.state.num_nodes); j++) {\n            let d = \"-\"\n            let sentDemand = 0\n            let satisfiedDemand = 0\n            Object.values(this.state.flows).forEach((flow, f) => {\n                if (flow.src === i.toString() && flow.dst === j.toString()) {\n                    satisfiedDemand = flow.satisfied;\n                    d = flow.demand;\n                }\n            })\n            demandRow.push(<td>{d === \"-\" ? d : Math.round(d * 10000)/10000}</td>)\n            sentRow.push(<td>{satisfiedDemand === 0 ? \"-\" : Math.round(satisfiedDemand * 100000)/100000}</td>)\n            satisfiedRow.push(<td>{d === \"-\" ? \"-\" : `${Math.round((satisfiedDemand * 10000)/ d) / 100}%`}</td>)\n            totalSatisfied += satisfiedDemand;\n            totalDemand += d === \"-\" ? 0 : d;\n        }\n        demandRows.push(<tr key={key++}><th className=\"border-right\">{i}</th>{demandRow}</tr>)\n        sentRows.push(<tr key={key++}><th className=\"border-right\">{i}</th>{sentRow}</tr>)\n        satisfiedRows.push(<tr key={key++}><th className=\"border-right\">{i}</th>{satisfiedRow}</tr>)\n\n    }\n    demand.push(<tr key={key++}><th></th>{thead}</tr>)\n    demand.push(demandRows)\n    sentDemand.push(<tr key={key++}><th></th>{thead}</tr>)\n    sentDemand.push(sentRows)\n    satisfied.push(<tr key={key++}><th></th>{thead}</tr>)\n    satisfied.push(satisfiedRows)\n\n    // let scenarios;\n    // if (this.state.scenarios && this.state.scenarioSatisfaction) {\n    //     scenarios = this.state.scenarios.map((scenario, i) => {\n    //         return (<option\n    //                 key={i}\n    //                 value={i}>{`Scenario ${i} (${Math.round(this.state.probabilities[i] * 1000000) / 10000}%)\n    //                             (${Math.round((this.state.scenarioSatisfaction[i]) * 1000000) / 10000})`}\n    //                 </option>)\n    //     })\n    // }\n\n\n    let scenarios;\n    if (this.state.scenarios && this.state.scenarioSatisfaction) {\n        scenarios = this.state.scenarios.map((scenario, i) => {\n            return <tr\n                        className={i === this.state.scenario ? \"selected\" : \"\"}\n                        onClick={() => this.handleScenario(i)}\n                        key={i}\n                    >\n                        <td x=\"0\">Scenario {i}</td>\n                        <td x=\"50\">{Math.round(this.state.probabilities[i] * 1000000) / 10000}%</td>\n                        <td x=\"80\">{Math.round((this.state.scenarioSatisfaction[i]) * 1000000) / 10000}%</td>\n                    </tr>\n        });\n    }\n\n    let cvar;\n    if (this.state.cvar) {\n        cvar = (<tbody>\n                    <tr>\n                        <th className=\"border-bottom\" style={{\"paddingLeft\": \"10px\"}}>VAR</th>\n                        <th className=\"border-bottom\">CVAR</th>\n                    </tr>\n                    <tr>\n                        <td style={{\"paddingLeft\": \"20px\"}}>{this.state.var}</td>\n                        <td>{`${Math.round(this.state.cvar * 1000000) / 10000}%`}</td>\n                    </tr>\n                </tbody>)\n    }\n\n    return (\n      <StyledResults>\n          <SVG\n            ref={svg => this.svg = svg}\n          >\n            {/**<g className=\"l\">\n                { links }\n            </g>**/}\n            <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" pointerEvents=\"none\">\n                { limitButton }\n            </foreignObject>\n            <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" pointerEvents=\"none\">\n                { utilizationButton }\n            </foreignObject>\n            {/* <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" pointerEvents=\"none\">\n                <select onChange={e => this.handleScenario(e.target.value)} value={this.state.scenario}>\n                    { scenarios }\n                </select>\n            </foreignObject> */}\n            \n            <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" pointerEvents=\"none\" style={{\"padding\": \"14px\"}}>\n            {this.state.scenarios && this.state.scenarioSatisfaction &&\n                <ScenarioTable>\n                <div className=\"table-scroll\">\n                    <tbody>\n                        <tr>\n                            <th></th>\n                            <th>availability</th>\n                            <th>demand satisfied</th>\n                        </tr>\n                        { scenarios }\n                    </tbody>\n                </div>\n                </ScenarioTable>\n            }\n            </foreignObject>\n            {this.state.showPaths &&\n                <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" pointerEvents=\"none\" style={{\"padding\": \"14px\"}}>\n                  <PathTable>\n                    <tbody>\n                        <tr>\n                            <th></th>\n                            <th>weight</th>\n                            <th>availability</th>\n                        </tr>\n                        { path_info }\n                    </tbody>\n                  </PathTable>\n                </foreignObject>\n            }\n          </SVG>\n          <div className=\"tableTitle\">Demand</div>\n          <OuterTable>\n            <tbody>\n                { demand }\n            </tbody>\n          </OuterTable>\n          <div className=\"tableTitle\">Successful Demand</div>\n          <OuterTable>\n            <tbody>\n                { sentDemand }\n            </tbody>\n          </OuterTable>\n          <div className=\"tableTitle\">Satisfied Demand</div>\n          <OuterTable>\n            <tbody>\n                { satisfied }\n            </tbody>\n          </OuterTable>\n          <div className=\"tableTitle\">Loss</div>\n          <OuterTable>\n                { cvar }\n          </OuterTable>\n      </StyledResults>\n\n    )\n  }\n}\n\nexport default ForceGraph;\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport TEInputs from './TEInputs';\nimport StockInputs from './StockInputs';\nimport TEOutputs from './TEOutputs';\nimport Login from './Login';\nimport StockOutputs from './StockOutputs';\nimport ForceGraph from './ForceGraph';\n\nimport styled from 'styled-components';\nimport './style.css';\n\nconst TESection = styled.div`\n    width: 100vw;\n    height: 70vh;\n\n    #inputs {\n        text-align: center;\n        padding-top: 40px;\n        width: 100%;\n    }\n    #graph {\n        background-color: #EEE;\n        margin-top: 20px;\n        border: 1px solid gray;\n        height: 80vh;\n        width: 90%;\n        margin-left: auto;\n        margin-right: auto;\n    }\n`;\n\nconst StyledError = styled.div`\n    background-color: #CCC\n    padding: 20px;\n    text-align: center;\n    transition: .1s all;\n\n    &:hover {\n        background-color: #999;\n        cursor: pointer;\n    }\n`;\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            login: false,\n            te: {\n                inputs: {\n                    topology: \"B4\",\n                    demand: \"1\",\n                    path: \"ED\",\n                    beta: \".9\",\n                    cutoff: \".0001\",\n                    k: \"4\",\n                    downscale_demand: \"1000\",\n                    zeroindex: \"false\",\n                    demand_matrix: \"true\",\n                    num_nodes: 0,\n                },\n                results: {\n                    var: 0,\n                    cvar: 0,\n                    allocation: [],\n                    flows: [],\n                    capacity: [],\n                    T: [],\n                    Tf: [],\n                    links: [],\n                },\n                show_results: false,\n            },\n            stocks: {\n                inputs: {\n                    tickers: [\n                        \"\"\n                    ],\n                    beta: .9,\n                    roi: 50,\n                    target: 40,\n                    days: 800,\n                    budget: 1000,\n                    KEYS: [\"F6JGTHROSNY4A8MV\", \"EGZPCEQOXI85VKRT\", \"ASDPVYC2XRAJJ81K\", \"M4XW13HI1CWYH0KN\"],\n                    key: 0,\n                },\n                results: {\n\n                },\n                show_results: false,\n            },\n            error: \"\",\n            mode: \"TE\",\n        };\n        this.setMode = this.setMode.bind(this);\n        this.login = this.login.bind(this);\n        this.removeError = this.removeError.bind(this);\n        this.handleTESubmit = this.handleTESubmit.bind(this);\n        this.handleTEInput = this.handleTEInput.bind(this);\n        this.handleStockInput = this.handleStockInput.bind(this);\n        this.handleTickerValue = this.handleTickerValue.bind(this);\n        this.handleAddTicker = this.handleAddTicker.bind(this);\n        this.handleTickerSubmit = this.handleTickerSubmit.bind(this);\n    }\n\n    setMode(mode) {\n        this.setState({\n            ...this.state,\n            mode: mode,\n        });\n    }\n\n    removeError() {\n        this.setState({\n            ...this.state,\n            error: \"\",\n        });\n    }\n\n    login(password) {\n        if (password === \"CVaR2019!\") {\n            this.setState({\n                ...this.state,\n                login: true,\n            });       \n        };\n    }\n\n    ////////////////////////////////////////////////////////////////////\n    /////////////////////////// Stock Methods //////////////////////////\n    ////////////////////////////////////////////////////////////////////\n    handleStockInput(value, type) {\n        this.setState({\n            ...this.state,\n            stocks: {\n                ...this.state.stocks,\n                inputs: {\n                    ...this.state.stocks.inputs,\n                    [type]: value,\n                },\n                show_results: false,\n            }\n        })\n    }\n\n    handleTickerValue(value, num) {\n        let newtickers = this.state.stocks.inputs.tickers;\n        newtickers[num] = value;\n        this.setState({\n            ...this.state,\n            stocks: {\n                inputs: {\n                    ...this.state.stocks.inputs,\n                    tickers: newtickers,\n                },\n                show_results: false,\n            },\n        })\n        // fetch(`https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=${value}&apikey=${this.state.stocks.inputs.KEY}`, {\n        //   method: \"GET\",\n        //   mode: \"cors\"\n        // }).then(res => {\n        //     console.log(res);\n        //     return res.json();\n        // })\n        // .then(data => {\n        //     console.log(data.bestMatches);\n        //     this.setState({\n        //         stocks: {\n        //             ...this.state.stocks,\n        //             tickerMatches: data.bestMatches,\n        //         }\n        //     }, () => {\n        //         console.log(this.state)\n        //     })\n        // })\n        // .catch(err => console.log(err))\n\n\n    }\n\n    handleAddTicker() {\n        let newtickers = this.state.stocks.inputs.tickers;\n        newtickers.push(\"\");\n        this.setState({\n            ...this.state,\n            stocks: {\n                ...this.state.stocks,\n                inputs: {\n                    ...this.state.stocks.inputs,\n                    tickers: newtickers,\n                },\n                show_results: false,\n            },\n        })\n    }\n\n    handleTickerSubmit() {\n        let returns = [];\n        let ticker_ordered = [];\n        console.log(this.state.stocks.inputs.key)\n        Promise.all(\n            this.state.stocks.inputs.tickers.map(ticker => {\n                return new Promise((resolve, reject) => {\n                    fetch(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${ticker}&outputsize=full&apikey=${this.state.stocks.inputs.KEYS[this.state.stocks.inputs.key]}`, {\n                      method: \"GET\",\n                      mode: \"cors\"\n                    }).then(res => res.json())\n                    .then(data => {\n                        let daily_returns = []\n                        let daily_data = data[\"Time Series (Daily)\"];\n                        let close = \"4. close\";\n                        let days = Object.keys(daily_data);\n                        let last = daily_data[days[this.state.stocks.inputs.days + 1]][close]\n                        for (let i = this.state.stocks.inputs.days; i >= 0; i--) {\n                            let curr = daily_data[days[i]][close];\n                            daily_returns.push((curr - last) / last);\n                            last = curr;\n                        }\n                        returns.push(daily_returns);\n                        ticker_ordered.push(ticker);\n                        resolve();\n                    })\n                    .catch(error => {\n                        reject(error);\n                    });\n                })\n            })\n        )\n        .then(() => {\n            console.log({\n                \"nstocks\": this.state.stocks.inputs.tickers.length,\n                \"returns\": returns,\n                \"beta\": this.state.stocks.inputs.beta,\n                \"ticker_ordered\": ticker_ordered,\n              })\n            // var url = 'http://localhost:8080/api/cvarf';\n            var url = 'http://128.30.92.156:8080/api/cvarf';\n            fetch(url, {\n              method: \"POST\",\n              mode: \"cors\",\n              body: JSON.stringify({\n                \"nstocks\": this.state.stocks.inputs.tickers.length,\n                \"returns\": returns,\n                \"beta\": parseFloat(this.state.stocks.inputs.beta),\n                \"roi\": parseFloat(this.state.stocks.inputs.roi/this.state.stocks.inputs.budget),\n                \"target\": parseFloat(this.state.stocks.inputs.target/this.state.stocks.inputs.budget),\n              }),\n              headers:{\n                'Content-Type': 'application/json'\n              }\n            }).then(res => res.json())\n            .then(response => {\n                this.setState({\n                    ...this.state,\n                    stocks: {\n                        ...this.state.stocks,\n                        results: response,\n                        show_results: true,\n                        tickers: ticker_ordered,\n                    },\n                })\n            })\n            .catch(error => console.error('Error:', error));\n        })\n        .catch(error => {\n            console.log(error);\n            let oldkey = this.state.stocks.inputs.key;\n            let newkey = this.state.stocks.inputs.key+1 >= this.state.stocks.inputs.KEYS.length ? 0 : this.state.stocks.inputs.key+1\n            this.setState({\n                ...this.state,\n                stocks: {\n                    ...this.state.stocks,\n                    inputs: {\n                        ...this.state.stocks.inputs,\n                        key: newkey,\n                    },\n                },\n                error: {\n                    error: error,\n                    message: `API error with key ${oldkey}...`,\n                }\n            })\n        });\n    }\n\n    ////////////////////////////////////////////////////////////////////\n    /////////////////////////// TE Methods /////////////////////////////\n    ////////////////////////////////////////////////////////////////////\n    handleTEInput(value, type) {\n        console.log(this.state.te.inputs)\n        this.setState({\n            ...this.state,\n            te: {\n                ...this.state.te,\n                inputs: {\n                    ...this.state.te.inputs,\n                    [type]: value,\n                },\n                show_results: false,\n            }\n        })\n    }\n\n    handleTESubmit() {\n        // var url = 'http://localhost:8080/api/teavar';\n        var url = 'http://128.30.92.156:8080/api/teavar';\n\n        let data = {\n            topology: this.state.te.inputs.topology,\n            demand: this.state.te.inputs.demand,\n            path: this.state.te.inputs.path,\n            beta: this.state.te.inputs.beta,\n            cutoff: this.state.te.inputs.cutoff,\n        }\n        if (this.state.te.inputs.path.includes(\"ksp\")) {\n            data.k = `${this.state.te.inputs.path.split(\"_\")[1]}`;\n        } else {\n            data.k = \"4\";\n        }\n        switch (data.topology) {\n            case \"Custom\":\n                data.downscale_demand = \"1\";\n                break;\n            case \"B4\":\n                data.downscale_demand = \"1\";\n                break;\n            case \"IBM\":\n                data.downscale_demand = \"1000\";\n                break;\n            case \"Abilene\":\n                data.downscale_demand = \"1\";\n                break;\n            default:\n                data.downscale_demand = \"1000\";\n                break;\n        }\n\n        fetch(url, {\n          method: \"POST\",\n          mode: \"cors\",\n          body: JSON.stringify(data),\n          headers:{\n            'Content-Type': 'application/json'\n          }\n        }).then(res => res.json())\n        .then(response => {\n            console.log(response)\n            this.setState({\n                ...this.state,\n                te: {\n                    ...this.state.te,\n                    inputs: {\n                        ...this.state.te.inputs,\n                        num_nodes: data.num_nodes,\n                        zeroindex: data.zeroindex,\n                    },\n                    results: response,\n                    show_results: true,\n                },\n            })\n        })\n        .catch(error => console.error('Error:', error));\n    }\n\n    render() {\n        var home;\n        var header;\n        if (this.state.mode === \"TE\") {\n            header = (<Header\n                modes={[\"TE\", \"Stocks\"]}\n                mode={this.state.mode}\n                setMode={this.setMode}\n            />)\n            home = (\n                <div>\n                    <TESection>\n                        <div id=\"inputs\">\n                            <TEInputs\n                              handleTESubmit={this.handleTESubmit}\n                              handleTEInput={this.handleTEInput}>\n                            </TEInputs>\n                        </div>\n                        <div id=\"graph\">\n                            {/*<img alt=\"graph\" src={`./img/${this.state.te.inputs.topology}.png`}/>*/}\n                            <ForceGraph\n                                topology={this.state.te.inputs.topology}\n                                num_nodes={this.state.te.results.num_nodes}\n                                capacity={this.state.te.results.capacity}\n                                failure_probabilities={this.state.te.results.failure_probabilities}\n                                T={this.state.te.results.T}\n                                Tf={this.state.te.results.Tf}\n                                links={this.state.te.results.links}\n                                flows={this.state.te.results.flows}\n                                allocation={this.state.te.results.allocation}\n                                demand={this.state.te.results.demand}\n                                probabilities={this.state.te.results.probabilities}\n                                scenarios={this.state.te.results.scenarios}\n                                X={this.state.te.results.X}\n                                var={this.state.te.results.var}\n                                cvar={this.state.te.results.cvar}\n                            />\n                        </div>\n                    </TESection>\n                    {/**this.state.te.show_results &&\n                        <TEOutputs\n                          data={this.state.te.results}\n                          num_nodes={this.state.te.inputs.num_nodes}\n                          zeroindex={this.state.te.inputs.zeroindex}\n                        />**/\n                    }\n                </div>\n            )\n        } else if (!this.state.login) {\n            home = <Login login={this.login} />\n            header = (<Header\n                modes={[\"TE\", \"Stocks\"]}\n                mode={this.state.mode}\n                setMode={this.setMode}\n            />)\n        } else  {\n            header = (<Header\n                modes={[\"TE\", \"Stocks\"]}\n                mode={this.state.mode}\n                setMode={this.setMode}\n            />)\n            home = (<div>\n                <StockInputs\n                    handleTickerValue={this.handleTickerValue}\n                    handleStockInput={this.handleStockInput}\n                    handleAddTicker={this.handleAddTicker}\n                    handleTickerSubmit={this.handleTickerSubmit}\n                    tickers={this.state.stocks.inputs.tickers}\n                    tickerMatches={this.state.stocks.tickerMatches}\n                >\n                </StockInputs>\n                {this.state.stocks.show_results &&\n                    <StockOutputs\n                    data={this.state.stocks.results}\n                    roi={parseFloat(this.state.stocks.inputs.roi)}\n                    target={parseFloat(this.state.stocks.inputs.target)}\n                    tickers={this.state.stocks.tickers}\n                    budget={parseFloat(this.state.stocks.inputs.budget)}\n                    />\n                }\n                </div>)\n        }\n        return (\n          <div>\n            { header }\n            {this.state.error !== \"\" &&\n                <StyledError onClick={this.removeError}>{this.state.error.message}</StyledError>\n            }\n            { home }\n          </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}